#include "textcodec.h"

TextCodec::TextCodec()
{
    EncodingNumber = 0;
    EncodingOneByte = false;
    Map0 = "";
    Map1 = "";
    Map2 = "";
    Map3 = "";
    Unicode = false;
    BOM__[0] = 0;

    EncodingName = "None";
    EncodingNumber = NONE;
    EncodingOneByte = true;

    for (int I = 0; I < 256; I++)
    {
        MapByteToText[I] = I;
        MapTextToByte[I] = I;
    }

    Reset();
}

TextCodec::TextCodec(int CodePage)
{
    EncodingNumber = CodePage;
    EncodingOneByte = false;
    Map0 = "";
    Map1 = "";
    Map2 = "";
    Map3 = "";
    Unicode = false;
    BOM__[0] = 0;
    switch (CodePage)
    {
        case DOS:
            EncodingName = "DOS";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "C7,FC,E9,E2,E4,E0,E5,E7,EA,EB,E8,EF,EE,EC,C4,C5,C9,E6,C6,F4,F6,F2,FB,F9,FF,D6,DC,A2,A3,A5,20A7,0192,E1,ED,F3,FA,F1,D1,AA,BA,BF,2310,AC,BD,BC,A1,AB,BB,2591,2592,2593,2502,2524,2561,2562,2556,2555,2563,2551,2557,255D,255C,255B,2510,";
            Map3 = "2514,2534,252C,251C,2500,253C,255E,255F,255A,2554,2569,2566,2560,2550,256C,2567,2568,2564,2565,2559,2558,2552,2553,256B,256A,2518,250C,2588,2584,258C,2590,2580,0251,03D0,1D26,1D28,2211,01A1,B5,1D1B,0278,03F4,2126,1E9F,221E,2205,2208,2229,2261,B1,2265,2264,2320,2321,F7,2248,B0,2219,B7,221A,207F,B2,25A0,A0,";
            break;
        case 37:
            EncodingName = "IBM37";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,E2,E4,E0,E1,E3,E5,E7,F1,A2,2E,3C,28,2B,7C,26,E9,EA,EB,E8,ED,EE,EF,EC,DF,21,24,2A,29,3B,AC,2D,2F,C2,C4,C0,C1,C3,C5,C7,D1,A6,2C,25,5F,3E,3F,F8,C9,CA,CB,C8,CD,CE,CF,CC,60,3A,23,40,27,3D,22,";
            Map2 = "D8,61,62,63,64,65,66,67,68,69,AB,BB,F0,FD,FE,B1,B0,6A,6B,6C,6D,6E,6F,70,71,72,AA,BA,E6,B8,C6,A4,B5,7E,73,74,75,76,77,78,79,7A,A1,BF,D0,DD,DE,AE,5E,A3,A5,B7,A9,A7,B6,BC,BD,BE,5B,5D,AF,A8,B4,D7,";
            Map3 = "7B,41,42,43,44,45,46,47,48,49,AD,F4,F6,F2,F3,F5,7D,4A,4B,4C,4D,4E,4F,50,51,52,B9,FB,FC,F9,FA,FF,5C,F7,53,54,55,56,57,58,59,5A,B2,D4,D6,D2,D3,D5,30,31,32,33,34,35,36,37,38,39,B3,DB,DC,D9,DA,9F,";
            break;
        case 437:
            EncodingName = "IBM437";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "C7,FC,E9,E2,E4,E0,E5,E7,EA,EB,E8,EF,EE,EC,C4,C5,C9,E6,C6,F4,F6,F2,FB,F9,FF,D6,DC,A2,A3,A5,20A7,0192,E1,ED,F3,FA,F1,D1,AA,BA,BF,2310,AC,BD,BC,A1,AB,BB,2591,2592,2593,2502,2524,2561,2562,2556,2555,2563,2551,2557,255D,255C,255B,2510,";
            Map3 = "2514,2534,252C,251C,2500,253C,255E,255F,255A,2554,2569,2566,2560,2550,256C,2567,2568,2564,2565,2559,2558,2552,2553,256B,256A,2518,250C,2588,2584,258C,2590,2580,03B1,DF,0393,03C0,03A3,03C3,B5,03C4,03A6,0398,03A9,03B4,221E,03C6,03B5,2229,2261,B1,2265,2264,2320,2321,F7,2248,B0,2219,B7,221A,207F,B2,25A0,A0,";
            break;
        case 500:
            EncodingName = "IBM500";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,E2,E4,E0,E1,E3,E5,E7,F1,5B,2E,3C,28,2B,21,26,E9,EA,EB,E8,ED,EE,EF,EC,DF,5D,24,2A,29,3B,5E,2D,2F,C2,C4,C0,C1,C3,C5,C7,D1,A6,2C,25,5F,3E,3F,F8,C9,CA,CB,C8,CD,CE,CF,CC,60,3A,23,40,27,3D,22,";
            Map2 = "D8,61,62,63,64,65,66,67,68,69,AB,BB,F0,FD,FE,B1,B0,6A,6B,6C,6D,6E,6F,70,71,72,AA,BA,E6,B8,C6,A4,B5,7E,73,74,75,76,77,78,79,7A,A1,BF,D0,DD,DE,AE,A2,A3,A5,B7,A9,A7,B6,BC,BD,BE,AC,7C,AF,A8,B4,D7,";
            Map3 = "7B,41,42,43,44,45,46,47,48,49,AD,F4,F6,F2,F3,F5,7D,4A,4B,4C,4D,4E,4F,50,51,52,B9,FB,FC,F9,FA,FF,5C,F7,53,54,55,56,57,58,59,5A,B2,D4,D6,D2,D3,D5,30,31,32,33,34,35,36,37,38,39,B3,DB,DC,D9,DA,9F,";
            break;
        case 708:
            EncodingName = "ASMO-708";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "2502,2524,E9,E2,2561,E0,2562,E7,EA,EB,E8,EF,EE,2556,2555,2563,2551,2557,255D,F4,255C,255B,FB,F9,2510,2514,9A,9B,9C,9D,9E,9F,F8C1,2534,252C,251C,A4,2500,253C,255E,255F,255A,2554,2569,060C,2566,AB,BB,2591,2592,2593,2560,2550,256C,2567,2568,2564,2565,2559,061B,2558,2552,2553,061F,";
            Map3 = "256B,0621,0622,0623,0624,0625,0626,0627,0628,0629,062A,062B,062C,062D,062E,062F,0630,0631,0632,0633,0634,0635,0636,0637,0638,0639,063A,2588,2584,258C,2590,2580,0640,0641,0642,0643,0644,0645,0646,0647,0648,0649,064A,064B,064C,064D,064E,064F,0650,0651,0652,F8C2,F8C3,F8C4,F8C5,F8C6,F8C7,256A,2518,250C,B5,A3,25A0,A0,";
            break;
        case 720:
            EncodingName = "DOS-720";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "80,81,E9,E2,84,E0,86,E7,EA,EB,E8,EF,EE,8D,8E,8F,90,0651,0652,F4,A4,0640,FB,F9,0621,0622,0623,0624,A3,0625,0626,0627,0628,0629,062A,062B,062C,062D,062E,062F,0630,0631,0632,0633,0634,0635,AB,BB,2591,2592,2593,2502,2524,2561,2562,2556,2555,2563,2551,2557,255D,255C,255B,2510,";
            Map3 = "2514,2534,252C,251C,2500,253C,255E,255F,255A,2554,2569,2566,2560,2550,256C,2567,2568,2564,2565,2559,2558,2552,2553,256B,256A,2518,250C,2588,2584,258C,2590,2580,0636,0637,0638,0639,063A,0641,B5,0642,0643,0644,0645,0646,0647,0648,0649,064A,2261,064B,064C,064D,064E,064F,0650,2248,B0,2219,B7,221A,207F,B2,25A0,A0,";
            break;
        case 737:
            EncodingName = "IBM737";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "0391,0392,0393,0394,0395,0396,0397,0398,0399,039A,039B,039C,039D,039E,039F,03A0,03A1,03A3,03A4,03A5,03A6,03A7,03A8,03A9,03B1,03B2,03B3,03B4,03B5,03B6,03B7,03B8,03B9,03BA,03BB,03BC,03BD,03BE,03BF,03C0,03C1,03C3,03C2,03C4,03C5,03C6,03C7,03C8,2591,2592,2593,2502,2524,2561,2562,2556,2555,2563,2551,2557,255D,255C,255B,2510,";
            Map3 = "2514,2534,252C,251C,2500,253C,255E,255F,255A,2554,2569,2566,2560,2550,256C,2567,2568,2564,2565,2559,2558,2552,2553,256B,256A,2518,250C,2588,2584,258C,2590,2580,03C9,03AC,03AD,03AE,03CA,03AF,03CC,03CD,03CB,03CE,0386,0388,0389,038A,038C,038E,038F,B1,2265,2264,03AA,03AB,F7,2248,B0,2219,B7,221A,207F,B2,25A0,A0,";
            break;
        case 775:
            EncodingName = "IBM775";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "0106,FC,E9,0101,E4,0123,E5,0107,0142,0113,0156,0157,012B,0179,C4,C5,C9,E6,C6,014D,F6,0122,A2,015A,015B,D6,DC,F8,A3,D8,D7,A4,0100,012A,F3,017B,017C,017A,201D,A6,A9,AE,AC,BD,BC,0141,AB,BB,2591,2592,2593,2502,2524,0104,010C,0118,0116,2563,2551,2557,255D,012E,0160,2510,";
            Map3 = "2514,2534,252C,251C,2500,253C,0172,016A,255A,2554,2569,2566,2560,2550,256C,017D,0105,010D,0119,0117,012F,0161,0173,016B,017E,2518,250C,2588,2584,258C,2590,2580,D3,DF,014C,0143,F5,D5,B5,0144,0136,0137,013B,013C,0146,0112,0145,2019,AD,B1,201C,BE,B6,A7,F7,201E,B0,2219,B7,B9,B3,B2,25A0,A0,";
            break;
        case 850:
            EncodingName = "IBM850";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "C7,FC,E9,E2,E4,E0,E5,E7,EA,EB,E8,EF,EE,EC,C4,C5,C9,E6,C6,F4,F6,F2,FB,F9,FF,D6,DC,F8,A3,D8,D7,0192,E1,ED,F3,FA,F1,D1,AA,BA,BF,AE,AC,BD,BC,A1,AB,BB,2591,2592,2593,2502,2524,C1,C2,C0,A9,2563,2551,2557,255D,A2,A5,2510,";
            Map3 = "2514,2534,252C,251C,2500,253C,E3,C3,255A,2554,2569,2566,2560,2550,256C,A4,F0,D0,CA,CB,C8,0131,CD,CE,CF,2518,250C,2588,2584,A6,CC,2580,D3,DF,D4,D2,F5,D5,B5,FE,DE,DA,DB,D9,FD,DD,AF,B4,AD,B1,2017,BE,B6,A7,F7,B8,B0,A8,B7,B9,B3,B2,25A0,A0,";
            break;
        case 852:
            EncodingName = "IBM852";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "C7,FC,E9,E2,E4,016F,0107,E7,0142,EB,0150,0151,EE,0179,C4,0106,C9,0139,013A,F4,F6,013D,013E,015A,015B,D6,DC,0164,0165,0141,D7,010D,E1,ED,F3,FA,0104,0105,017D,017E,0118,0119,AC,017A,010C,015F,AB,BB,2591,2592,2593,2502,2524,C1,C2,011A,015E,2563,2551,2557,255D,017B,017C,2510,";
            Map3 = "2514,2534,252C,251C,2500,253C,0102,0103,255A,2554,2569,2566,2560,2550,256C,A4,0111,0110,010E,CB,010F,0147,CD,CE,011B,2518,250C,2588,2584,0162,016E,2580,D3,DF,D4,0143,0144,0148,0160,0161,0154,DA,0155,0170,FD,DD,0163,B4,AD,02DD,02DB,02C7,02D8,A7,F7,B8,B0,A8,02D9,0171,0158,0159,25A0,A0,";
            break;
        case 855:
            EncodingName = "IBM855";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "0452,0402,0453,0403,0451,0401,0454,0404,0455,0405,0456,0406,0457,0407,0458,0408,0459,0409,045A,040A,045B,040B,045C,040C,045E,040E,045F,040F,044E,042E,044A,042A,0430,0410,0431,0411,0446,0426,0434,0414,0435,0415,0444,0424,0433,0413,AB,BB,2591,2592,2593,2502,2524,0445,0425,0438,0418,2563,2551,2557,255D,0439,0419,2510,";
            Map3 = "2514,2534,252C,251C,2500,253C,043A,041A,255A,2554,2569,2566,2560,2550,256C,A4,043B,041B,043C,041C,043D,041D,043E,041E,043F,2518,250C,2588,2584,041F,044F,2580,042F,0440,0420,0441,0421,0442,0422,0443,0423,0436,0416,0432,0412,044C,042C,2116,AD,044B,042B,0437,0417,0448,0428,044D,042D,0449,0429,0447,0427,A7,25A0,A0,";
            break;
        case 857:
            EncodingName = "IBM857";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "C7,FC,E9,E2,E4,E0,E5,E7,EA,EB,E8,EF,EE,0131,C4,C5,C9,E6,C6,F4,F6,F2,FB,F9,0130,D6,DC,F8,A3,D8,015E,015F,E1,ED,F3,FA,F1,D1,011E,011F,BF,AE,AC,BD,BC,A1,AB,BB,2591,2592,2593,2502,2524,C1,C2,C0,A9,2563,2551,2557,255D,A2,A5,2510,";
            Map3 = "2514,2534,252C,251C,2500,253C,E3,C3,255A,2554,2569,2566,2560,2550,256C,A4,BA,AA,CA,CB,C8,F8BB,CD,CE,CF,2518,250C,2588,2584,A6,CC,2580,D3,DF,D4,D2,F5,D5,B5,F8BC,D7,DA,DB,D9,EC,FF,AF,B4,AD,B1,F8BD,BE,B6,A7,F7,B8,B0,A8,B7,B9,B3,B2,25A0,A0,";
            break;
        case 858:
            EncodingName = "IBM858";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "C7,FC,E9,E2,E4,E0,E5,E7,EA,EB,E8,EF,EE,EC,C4,C5,C9,E6,C6,F4,F6,F2,FB,F9,FF,D6,DC,F8,A3,D8,D7,0192,E1,ED,F3,FA,F1,D1,AA,BA,BF,AE,AC,BD,BC,A1,AB,BB,2591,2592,2593,2502,2524,C1,C2,C0,A9,2563,2551,2557,255D,A2,A5,2510,";
            Map3 = "2514,2534,252C,251C,2500,253C,E3,C3,255A,2554,2569,2566,2560,2550,256C,A4,F0,D0,CA,CB,C8,20AC,CD,CE,CF,2518,250C,2588,2584,A6,CC,2580,D3,DF,D4,D2,F5,D5,B5,FE,DE,DA,DB,D9,FD,DD,AF,B4,AD,B1,2017,BE,B6,A7,F7,B8,B0,A8,B7,B9,B3,B2,25A0,A0,";
            break;
        case 860:
            EncodingName = "IBM860";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "C7,FC,E9,E2,E3,E0,C1,E7,EA,CA,E8,CD,D4,EC,C3,C2,C9,C0,C8,F4,F5,F2,DA,F9,CC,D5,DC,A2,A3,D9,20A7,D3,E1,ED,F3,FA,F1,D1,AA,BA,BF,D2,AC,BD,BC,A1,AB,BB,2591,2592,2593,2502,2524,2561,2562,2556,2555,2563,2551,2557,255D,255C,255B,2510,";
            Map3 = "2514,2534,252C,251C,2500,253C,255E,255F,255A,2554,2569,2566,2560,2550,256C,2567,2568,2564,2565,2559,2558,2552,2553,256B,256A,2518,250C,2588,2584,258C,2590,2580,03B1,DF,0393,03C0,03A3,03C3,B5,03C4,03A6,0398,03A9,03B4,221E,03C6,03B5,2229,2261,B1,2265,2264,2320,2321,F7,2248,B0,2219,B7,221A,207F,B2,25A0,A0,";
            break;
        case 861:
            EncodingName = "IBM861";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "C7,FC,E9,E2,E4,E0,E5,E7,EA,EB,E8,D0,F0,DE,C4,C5,C9,E6,C6,F4,F6,FE,FB,DD,FD,D6,DC,F8,A3,D8,20A7,0192,E1,ED,F3,FA,C1,CD,D3,DA,BF,2310,AC,BD,BC,A1,AB,BB,2591,2592,2593,2502,2524,2561,2562,2556,2555,2563,2551,2557,255D,255C,255B,2510,";
            Map3 = "2514,2534,252C,251C,2500,253C,255E,255F,255A,2554,2569,2566,2560,2550,256C,2567,2568,2564,2565,2559,2558,2552,2553,256B,256A,2518,250C,2588,2584,258C,2590,2580,03B1,DF,0393,03C0,03A3,03C3,B5,03C4,03A6,0398,03A9,03B4,221E,03C6,03B5,2229,2261,B1,2265,2264,2320,2321,F7,2248,B0,2219,B7,221A,207F,B2,25A0,A0,";
            break;
        case 862:
            EncodingName = "DOS-862";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "05D0,05D1,05D2,05D3,05D4,05D5,05D6,05D7,05D8,05D9,05DA,05DB,05DC,05DD,05DE,05DF,05E0,05E1,05E2,05E3,05E4,05E5,05E6,05E7,05E8,05E9,05EA,A2,A3,A5,20A7,0192,E1,ED,F3,FA,F1,D1,AA,BA,BF,2310,AC,BD,BC,A1,AB,BB,2591,2592,2593,2502,2524,2561,2562,2556,2555,2563,2551,2557,255D,255C,255B,2510,";
            Map3 = "2514,2534,252C,251C,2500,253C,255E,255F,255A,2554,2569,2566,2560,2550,256C,2567,2568,2564,2565,2559,2558,2552,2553,256B,256A,2518,250C,2588,2584,258C,2590,2580,03B1,DF,0393,03C0,03A3,03C3,B5,03C4,03A6,0398,03A9,03B4,221E,03C6,03B5,2229,2261,B1,2265,2264,2320,2321,F7,2248,B0,2219,B7,221A,207F,B2,25A0,A0,";
            break;
        case 863:
            EncodingName = "IBM863";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "C7,FC,E9,E2,C2,E0,B6,E7,EA,EB,E8,EF,EE,2017,C0,A7,C9,C8,CA,F4,CB,CF,FB,F9,A4,D4,DC,A2,A3,D9,DB,0192,A6,B4,F3,FA,A8,B8,B3,AF,CE,2310,AC,BD,BC,BE,AB,BB,2591,2592,2593,2502,2524,2561,2562,2556,2555,2563,2551,2557,255D,255C,255B,2510,";
            Map3 = "2514,2534,252C,251C,2500,253C,255E,255F,255A,2554,2569,2566,2560,2550,256C,2567,2568,2564,2565,2559,2558,2552,2553,256B,256A,2518,250C,2588,2584,258C,2590,2580,03B1,DF,0393,03C0,03A3,03C3,B5,03C4,03A6,0398,03A9,03B4,221E,03C6,03B5,2229,2261,B1,2265,2264,2320,2321,F7,2248,B0,2219,B7,221A,207F,B2,25A0,A0,";
            break;
        case 864:
            EncodingName = "IBM864";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "B0,B7,2219,221A,2592,2500,2502,253C,2524,252C,251C,2534,2510,250C,2514,2518,03B2,221E,03C6,B1,BD,BC,2248,AB,BB,FEF7,FEF8,9B,9C,FEFB,FEFC,9F,A0,AD,FE82,A3,A4,FE84,F8BE,F8BF,FE8E,FE8F,FE95,FE99,060C,FE9D,FEA1,FEA5,0660,0661,0662,0663,0664,0665,0666,0667,0668,0669,FED1,061B,FEB1,FEB5,FEB9,061F,";
            Map3 = "A2,FE80,FE81,FE83,FE85,FECA,FE8B,FE8D,FE91,FE93,FE97,FE9B,FE9F,FEA3,FEA7,FEA9,FEAB,FEAD,FEAF,FEB3,FEB7,FEBB,FEBF,FEC1,FEC5,FECB,FECF,A6,AC,F7,D7,FEC9,0640,FED3,FED7,FEDB,FEDF,FEE3,FEE7,FEEB,FEED,FEEF,FEF3,FEBD,FECC,FECE,FECD,FEE1,FE7D,0651,FEE5,FEE9,FEEC,FEF0,FEF2,FED0,FED5,FEF5,FEF6,FEDD,FED9,FEF1,25A0,F8C0,";
            break;
        case 865:
            EncodingName = "IBM865";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "C7,FC,E9,E2,E4,E0,E5,E7,EA,EB,E8,EF,EE,EC,C4,C5,C9,E6,C6,F4,F6,F2,FB,F9,FF,D6,DC,F8,A3,D8,20A7,0192,E1,ED,F3,FA,F1,D1,AA,BA,BF,2310,AC,BD,BC,A1,AB,A4,2591,2592,2593,2502,2524,2561,2562,2556,2555,2563,2551,2557,255D,255C,255B,2510,";
            Map3 = "2514,2534,252C,251C,2500,253C,255E,255F,255A,2554,2569,2566,2560,2550,256C,2567,2568,2564,2565,2559,2558,2552,2553,256B,256A,2518,250C,2588,2584,258C,2590,2580,03B1,DF,0393,03C0,03A3,03C3,B5,03C4,03A6,0398,03A9,03B4,221E,03C6,03B5,2229,2261,B1,2265,2264,2320,2321,F7,2248,B0,2219,B7,221A,207F,B2,25A0,A0,";
            break;
        case 866:
            EncodingName = "cp866";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "0410,0411,0412,0413,0414,0415,0416,0417,0418,0419,041A,041B,041C,041D,041E,041F,0420,0421,0422,0423,0424,0425,0426,0427,0428,0429,042A,042B,042C,042D,042E,042F,0430,0431,0432,0433,0434,0435,0436,0437,0438,0439,043A,043B,043C,043D,043E,043F,2591,2592,2593,2502,2524,2561,2562,2556,2555,2563,2551,2557,255D,255C,255B,2510,";
            Map3 = "2514,2534,252C,251C,2500,253C,255E,255F,255A,2554,2569,2566,2560,2550,256C,2567,2568,2564,2565,2559,2558,2552,2553,256B,256A,2518,250C,2588,2584,258C,2590,2580,0440,0441,0442,0443,0444,0445,0446,0447,0448,0449,044A,044B,044C,044D,044E,044F,0401,0451,0404,0454,0407,0457,040E,045E,B0,2219,B7,221A,2116,A4,25A0,A0,";
            break;
        case 869:
            EncodingName = "IBM869";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "80,81,82,83,84,85,0386,87,B7,AC,A6,2018,2019,0388,2015,0389,038A,03AA,038C,93,94,038E,03AB,A9,038F,B2,B3,03AC,A3,03AD,03AE,03AF,03CA,0390,03CC,03CD,0391,0392,0393,0394,0395,0396,0397,BD,0398,0399,AB,BB,2591,2592,2593,2502,2524,039A,039B,039C,039D,2563,2551,2557,255D,039E,039F,2510,";
            Map3 = "2514,2534,252C,251C,2500,253C,03A0,03A1,255A,2554,2569,2566,2560,2550,256C,03A3,03A4,03A5,03A6,03A7,03A8,03A9,03B1,03B2,03B3,2518,250C,2588,2584,03B4,03B5,2580,03B6,03B7,03B8,03B9,03BA,03BB,03BC,03BD,03BE,03BF,03C0,03C1,03C3,03C2,03C4,0384,AD,B1,03C5,03C6,03C7,A7,03C8,0385,B0,A8,03C9,03CB,03B0,03CE,25A0,A0,";
            break;
        case 870:
            EncodingName = "IBM870";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,E2,E4,0163,E1,0103,010D,E7,0107,5B,2E,3C,28,2B,21,26,E9,0119,EB,016F,ED,EE,013E,013A,DF,5D,24,2A,29,3B,5E,2D,2F,C2,C4,02DD,C1,0102,010C,C7,0106,7C,2C,25,5F,3E,3F,02C7,C9,0118,CB,016E,CD,CE,013D,0139,60,3A,23,40,27,3D,22,";
            Map2 = "02D8,61,62,63,64,65,66,67,68,69,015B,0148,0111,FD,0159,015F,B0,6A,6B,6C,6D,6E,6F,70,71,72,0142,0144,0161,B8,02DB,A4,0105,7E,73,74,75,76,77,78,79,7A,015A,0147,0110,DD,0158,015E,02D9,0104,017C,0162,017B,A7,017E,017A,017D,0179,0141,0143,0160,A8,B4,D7,";
            Map3 = "7B,41,42,43,44,45,46,47,48,49,AD,F4,F6,0155,F3,0151,7D,4A,4B,4C,4D,4E,4F,50,51,52,011A,0171,FC,0165,FA,011B,5C,F7,53,54,55,56,57,58,59,5A,010F,D4,D6,0154,D3,0150,30,31,32,33,34,35,36,37,38,39,010E,0170,DC,0164,DA,9F,";
            break;
        case 874:
            EncodingName = "windows-874";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "20AC,81,82,83,84,2026,86,87,88,89,8A,8B,8C,8D,8E,8F,90,2018,2019,201C,201D,2022,2013,2014,98,99,9A,9B,9C,9D,9E,9F,A0,0E01,0E02,0E03,0E04,0E05,0E06,0E07,0E08,0E09,0E0A,0E0B,0E0C,0E0D,0E0E,0E0F,0E10,0E11,0E12,0E13,0E14,0E15,0E16,0E17,0E18,0E19,0E1A,0E1B,0E1C,0E1D,0E1E,0E1F,";
            Map3 = "0E20,0E21,0E22,0E23,0E24,0E25,0E26,0E27,0E28,0E29,0E2A,0E2B,0E2C,0E2D,0E2E,0E2F,0E30,0E31,0E32,0E33,0E34,0E35,0E36,0E37,0E38,0E39,0E3A,F8C1,F8C2,F8C3,F8C4,0E3F,0E40,0E41,0E42,0E43,0E44,0E45,0E46,0E47,0E48,0E49,0E4A,0E4B,0E4C,0E4D,0E4E,0E4F,0E50,0E51,0E52,0E53,0E54,0E55,0E56,0E57,0E58,0E59,0E5A,0E5B,F8C5,F8C6,F8C7,F8C8,";
            break;
        case 875:
            EncodingName = "cp875";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,0391,0392,0393,0394,0395,0396,0397,0398,0399,5B,2E,3C,28,2B,21,26,039A,039B,039C,039D,039E,039F,03A0,03A1,03A3,5D,24,2A,29,3B,5E,2D,2F,03A4,03A5,03A6,03A7,03A8,03A9,03AA,03AB,7C,2C,25,5F,3E,3F,A8,0386,0388,0389,A0,038A,038C,038E,038F,60,3A,23,40,27,3D,22,";
            Map2 = "0385,61,62,63,64,65,66,67,68,69,03B1,03B2,03B3,03B4,03B5,03B6,B0,6A,6B,6C,6D,6E,6F,70,71,72,03B7,03B8,03B9,03BA,03BB,03BC,B4,7E,73,74,75,76,77,78,79,7A,03BD,03BE,03BF,03C0,03C1,03C3,A3,03AC,03AD,03AE,03CA,03AF,03CC,03CD,03CB,03CE,03C2,03C4,03C5,03C6,03C7,03C8,";
            Map3 = "7B,41,42,43,44,45,46,47,48,49,AD,03C9,0390,03B0,2018,2015,7D,4A,4B,4C,4D,4E,4F,50,51,52,B1,BD,3F,0387,2019,A6,5C,3F,53,54,55,56,57,58,59,5A,B2,A7,3F,3F,AB,AC,30,31,32,33,34,35,36,37,38,39,B3,A9,3F,3F,BB,9F,";
            break;
        case 1026:
            EncodingName = "IBM1026";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,E2,E4,E0,E1,E3,E5,7B,F1,C7,2E,3C,28,2B,21,26,E9,EA,EB,E8,ED,EE,EF,EC,DF,011E,0130,2A,29,3B,5E,2D,2F,C2,C4,C0,C1,C3,C5,5B,D1,015F,2C,25,5F,3E,3F,F8,C9,CA,CB,C8,CD,CE,CF,CC,0131,3A,D6,015E,27,3D,DC,";
            Map2 = "D8,61,62,63,64,65,66,67,68,69,AB,BB,7D,60,A6,B1,B0,6A,6B,6C,6D,6E,6F,70,71,72,AA,BA,E6,B8,C6,A4,B5,F6,73,74,75,76,77,78,79,7A,A1,BF,5D,24,40,AE,A2,A3,A5,B7,A9,A7,B6,BC,BD,BE,AC,7C,AF,A8,B4,D7,";
            Map3 = "E7,41,42,43,44,45,46,47,48,49,AD,F4,7E,F2,F3,F5,011F,4A,4B,4C,4D,4E,4F,50,51,52,B9,FB,5C,F9,FA,FF,FC,F7,53,54,55,56,57,58,59,5A,B2,D4,23,D2,D3,D5,30,31,32,33,34,35,36,37,38,39,B3,DB,22,D9,DA,9F,";
            break;
        case 1047:
            EncodingName = "IBM1047";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,0A,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,85,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,E2,E4,E0,E1,E3,E5,E7,F1,A2,2E,3C,28,2B,7C,26,E9,EA,EB,E8,ED,EE,EF,EC,DF,21,24,2A,29,3B,5E,2D,2F,C2,C4,C0,C1,C3,C5,C7,D1,A6,2C,25,5F,3E,3F,F8,C9,CA,CB,C8,CD,CE,CF,CC,60,3A,23,40,27,3D,22,";
            Map2 = "D8,61,62,63,64,65,66,67,68,69,AB,BB,F0,FD,FE,B1,B0,6A,6B,6C,6D,6E,6F,70,71,72,AA,BA,E6,B8,C6,A4,B5,7E,73,74,75,76,77,78,79,7A,A1,BF,D0,5B,DE,AE,AC,A3,A5,B7,A9,A7,B6,BC,BD,BE,DD,A8,AF,5D,B4,D7,";
            Map3 = "7B,41,42,43,44,45,46,47,48,49,AD,F4,F6,F2,F3,F5,7D,4A,4B,4C,4D,4E,4F,50,51,52,B9,FB,FC,F9,FA,FF,5C,F7,53,54,55,56,57,58,59,5A,B2,D4,D6,D2,D3,D5,30,31,32,33,34,35,36,37,38,39,B3,DB,DC,D9,DA,9F,";
            break;
        case 1140:
            EncodingName = "IBM1140";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,E2,E4,E0,E1,E3,E5,E7,F1,A2,2E,3C,28,2B,7C,26,E9,EA,EB,E8,ED,EE,EF,EC,DF,21,24,2A,29,3B,AC,2D,2F,C2,C4,C0,C1,C3,C5,C7,D1,A6,2C,25,5F,3E,3F,F8,C9,CA,CB,C8,CD,CE,CF,CC,60,3A,23,40,27,3D,22,";
            Map2 = "D8,61,62,63,64,65,66,67,68,69,AB,BB,F0,FD,FE,B1,B0,6A,6B,6C,6D,6E,6F,70,71,72,AA,BA,E6,B8,C6,20AC,B5,7E,73,74,75,76,77,78,79,7A,A1,BF,D0,DD,DE,AE,5E,A3,A5,B7,A9,A7,B6,BC,BD,BE,5B,5D,AF,A8,B4,D7,";
            Map3 = "7B,41,42,43,44,45,46,47,48,49,AD,F4,F6,F2,F3,F5,7D,4A,4B,4C,4D,4E,4F,50,51,52,B9,FB,FC,F9,FA,FF,5C,F7,53,54,55,56,57,58,59,5A,B2,D4,D6,D2,D3,D5,30,31,32,33,34,35,36,37,38,39,B3,DB,DC,D9,DA,9F,";
            break;
        case 1141:
            EncodingName = "IBM1141";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,E2,7B,E0,E1,E3,E5,E7,F1,C4,2E,3C,28,2B,21,26,E9,EA,EB,E8,ED,EE,EF,EC,7E,DC,24,2A,29,3B,5E,2D,2F,C2,5B,C0,C1,C3,C5,C7,D1,F6,2C,25,5F,3E,3F,F8,C9,CA,CB,C8,CD,CE,CF,CC,60,3A,23,A7,27,3D,22,";
            Map2 = "D8,61,62,63,64,65,66,67,68,69,AB,BB,F0,FD,FE,B1,B0,6A,6B,6C,6D,6E,6F,70,71,72,AA,BA,E6,B8,C6,20AC,B5,DF,73,74,75,76,77,78,79,7A,A1,BF,D0,DD,DE,AE,A2,A3,A5,B7,A9,40,B6,BC,BD,BE,AC,7C,AF,A8,B4,D7,";
            Map3 = "E4,41,42,43,44,45,46,47,48,49,AD,F4,A6,F2,F3,F5,FC,4A,4B,4C,4D,4E,4F,50,51,52,B9,FB,7D,F9,FA,FF,D6,F7,53,54,55,56,57,58,59,5A,B2,D4,5C,D2,D3,D5,30,31,32,33,34,35,36,37,38,39,B3,DB,5D,D9,DA,9F,";
            break;
        case 1142:
            EncodingName = "IBM1142";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,E2,E4,E0,E1,E3,7D,E7,F1,23,2E,3C,28,2B,21,26,E9,EA,EB,E8,ED,EE,EF,EC,DF,20AC,C5,2A,29,3B,5E,2D,2F,C2,C4,C0,C1,C3,24,C7,D1,F8,2C,25,5F,3E,3F,A6,C9,CA,CB,C8,CD,CE,CF,CC,60,3A,C6,D8,27,3D,22,";
            Map2 = "40,61,62,63,64,65,66,67,68,69,AB,BB,F0,FD,FE,B1,B0,6A,6B,6C,6D,6E,6F,70,71,72,AA,BA,7B,B8,5B,5D,B5,FC,73,74,75,76,77,78,79,7A,A1,BF,D0,DD,DE,AE,A2,A3,A5,B7,A9,A7,B6,BC,BD,BE,AC,7C,AF,A8,B4,D7,";
            Map3 = "E6,41,42,43,44,45,46,47,48,49,AD,F4,F6,F2,F3,F5,E5,4A,4B,4C,4D,4E,4F,50,51,52,B9,FB,7E,F9,FA,FF,5C,F7,53,54,55,56,57,58,59,5A,B2,D4,D6,D2,D3,D5,30,31,32,33,34,35,36,37,38,39,B3,DB,DC,D9,DA,9F,";
            break;
        case 1143:
            EncodingName = "IBM1143";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,E2,7B,E0,E1,E3,7D,E7,F1,A7,2E,3C,28,2B,21,26,60,EA,EB,E8,ED,EE,EF,EC,DF,20AC,C5,2A,29,3B,5E,2D,2F,C2,23,C0,C1,C3,24,C7,D1,F6,2C,25,5F,3E,3F,F8,5C,CA,CB,C8,CD,CE,CF,CC,E9,3A,C4,D6,27,3D,22,";
            Map2 = "D8,61,62,63,64,65,66,67,68,69,AB,BB,F0,FD,FE,B1,B0,6A,6B,6C,6D,6E,6F,70,71,72,AA,BA,E6,B8,C6,5D,B5,FC,73,74,75,76,77,78,79,7A,A1,BF,D0,DD,DE,AE,A2,A3,A5,B7,A9,5B,B6,BC,BD,BE,AC,7C,AF,A8,B4,D7,";
            Map3 = "E4,41,42,43,44,45,46,47,48,49,AD,F4,A6,F2,F3,F5,E5,4A,4B,4C,4D,4E,4F,50,51,52,B9,FB,7E,F9,FA,FF,C9,F7,53,54,55,56,57,58,59,5A,B2,D4,40,D2,D3,D5,30,31,32,33,34,35,36,37,38,39,B3,DB,DC,D9,DA,9F,";
            break;
        case 1144:
            EncodingName = "IBM1144";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,E2,E4,7B,E1,E3,E5,5C,F1,B0,2E,3C,28,2B,21,26,5D,EA,EB,7D,ED,EE,EF,7E,DF,E9,24,2A,29,3B,5E,2D,2F,C2,C4,C0,C1,C3,C5,C7,D1,F2,2C,25,5F,3E,3F,F8,C9,CA,CB,C8,CD,CE,CF,CC,F9,3A,A3,A7,27,3D,22,";
            Map2 = "D8,61,62,63,64,65,66,67,68,69,AB,BB,F0,FD,FE,B1,5B,6A,6B,6C,6D,6E,6F,70,71,72,AA,BA,E6,B8,C6,20AC,B5,EC,73,74,75,76,77,78,79,7A,A1,BF,D0,DD,DE,AE,A2,23,A5,B7,A9,40,B6,BC,BD,BE,AC,7C,AF,A8,B4,D7,";
            Map3 = "E0,41,42,43,44,45,46,47,48,49,AD,F4,F6,A6,F3,F5,E8,4A,4B,4C,4D,4E,4F,50,51,52,B9,FB,FC,60,FA,FF,E7,F7,53,54,55,56,57,58,59,5A,B2,D4,D6,D2,D3,D5,30,31,32,33,34,35,36,37,38,39,B3,DB,DC,D9,DA,9F,";
            break;
        case 1145:
            EncodingName = "IBM1145";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,E2,E4,E0,E1,E3,E5,E7,A6,5B,2E,3C,28,2B,7C,26,E9,EA,EB,E8,ED,EE,EF,EC,DF,5D,24,2A,29,3B,AC,2D,2F,C2,C4,C0,C1,C3,C5,C7,23,F1,2C,25,5F,3E,3F,F8,C9,CA,CB,C8,CD,CE,CF,CC,60,3A,D1,40,27,3D,22,";
            Map2 = "D8,61,62,63,64,65,66,67,68,69,AB,BB,F0,FD,FE,B1,B0,6A,6B,6C,6D,6E,6F,70,71,72,AA,BA,E6,B8,C6,20AC,B5,A8,73,74,75,76,77,78,79,7A,A1,BF,D0,DD,DE,AE,A2,A3,A5,B7,A9,A7,B6,BC,BD,BE,5E,21,AF,7E,B4,D7,";
            Map3 = "7B,41,42,43,44,45,46,47,48,49,AD,F4,F6,F2,F3,F5,7D,4A,4B,4C,4D,4E,4F,50,51,52,B9,FB,FC,F9,FA,FF,5C,F7,53,54,55,56,57,58,59,5A,B2,D4,D6,D2,D3,D5,30,31,32,33,34,35,36,37,38,39,B3,DB,DC,D9,DA,9F,";
            break;
        case 1146:
            EncodingName = "IBM1146";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,E2,E4,E0,E1,E3,E5,E7,F1,24,2E,3C,28,2B,7C,26,E9,EA,EB,E8,ED,EE,EF,EC,DF,21,A3,2A,29,3B,AC,2D,2F,C2,C4,C0,C1,C3,C5,C7,D1,A6,2C,25,5F,3E,3F,F8,C9,CA,CB,C8,CD,CE,CF,CC,60,3A,23,40,27,3D,22,";
            Map2 = "D8,61,62,63,64,65,66,67,68,69,AB,BB,F0,FD,FE,B1,B0,6A,6B,6C,6D,6E,6F,70,71,72,AA,BA,E6,B8,C6,20AC,B5,AF,73,74,75,76,77,78,79,7A,A1,BF,D0,DD,DE,AE,A2,5B,A5,B7,A9,A7,B6,BC,BD,BE,5E,5D,7E,A8,B4,D7,";
            Map3 = "7B,41,42,43,44,45,46,47,48,49,AD,F4,F6,F2,F3,F5,7D,4A,4B,4C,4D,4E,4F,50,51,52,B9,FB,FC,F9,FA,FF,5C,F7,53,54,55,56,57,58,59,5A,B2,D4,D6,D2,D3,D5,30,31,32,33,34,35,36,37,38,39,B3,DB,DC,D9,DA,9F,";
            break;
        case 1147:
            EncodingName = "IBM1147";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,E2,E4,40,E1,E3,E5,5C,F1,B0,2E,3C,28,2B,21,26,7B,EA,EB,7D,ED,EE,EF,EC,DF,A7,24,2A,29,3B,5E,2D,2F,C2,C4,C0,C1,C3,C5,C7,D1,F9,2C,25,5F,3E,3F,F8,C9,CA,CB,C8,CD,CE,CF,CC,B5,3A,A3,E0,27,3D,22,";
            Map2 = "D8,61,62,63,64,65,66,67,68,69,AB,BB,F0,FD,FE,B1,5B,6A,6B,6C,6D,6E,6F,70,71,72,AA,BA,E6,B8,C6,20AC,60,A8,73,74,75,76,77,78,79,7A,A1,BF,D0,DD,DE,AE,A2,23,A5,B7,A9,5D,B6,BC,BD,BE,AC,7C,AF,7E,B4,D7,";
            Map3 = "E9,41,42,43,44,45,46,47,48,49,AD,F4,F6,F2,F3,F5,E8,4A,4B,4C,4D,4E,4F,50,51,52,B9,FB,FC,A6,FA,FF,E7,F7,53,54,55,56,57,58,59,5A,B2,D4,D6,D2,D3,D5,30,31,32,33,34,35,36,37,38,39,B3,DB,DC,D9,DA,9F,";
            break;
        case 1148:
            EncodingName = "IBM1148";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,E2,E4,E0,E1,E3,E5,E7,F1,5B,2E,3C,28,2B,21,26,E9,EA,EB,E8,ED,EE,EF,EC,DF,5D,24,2A,29,3B,5E,2D,2F,C2,C4,C0,C1,C3,C5,C7,D1,A6,2C,25,5F,3E,3F,F8,C9,CA,CB,C8,CD,CE,CF,CC,60,3A,23,40,27,3D,22,";
            Map2 = "D8,61,62,63,64,65,66,67,68,69,AB,BB,F0,FD,FE,B1,B0,6A,6B,6C,6D,6E,6F,70,71,72,AA,BA,E6,B8,C6,20AC,B5,7E,73,74,75,76,77,78,79,7A,A1,BF,D0,DD,DE,AE,A2,A3,A5,B7,A9,A7,B6,BC,BD,BE,AC,7C,AF,A8,B4,D7,";
            Map3 = "7B,41,42,43,44,45,46,47,48,49,AD,F4,F6,F2,F3,F5,7D,4A,4B,4C,4D,4E,4F,50,51,52,B9,FB,FC,F9,FA,FF,5C,F7,53,54,55,56,57,58,59,5A,B2,D4,D6,D2,D3,D5,30,31,32,33,34,35,36,37,38,39,B3,DB,DC,D9,DA,9F,";
            break;
        case 1149:
            EncodingName = "IBM1149";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,E2,E4,E0,E1,E3,E5,E7,F1,DE,2E,3C,28,2B,21,26,E9,EA,EB,E8,ED,EE,EF,EC,DF,C6,24,2A,29,3B,D6,2D,2F,C2,C4,C0,C1,C3,C5,C7,D1,A6,2C,25,5F,3E,3F,F8,C9,CA,CB,C8,CD,CE,CF,CC,F0,3A,23,D0,27,3D,22,";
            Map2 = "D8,61,62,63,64,65,66,67,68,69,AB,BB,60,FD,7B,B1,B0,6A,6B,6C,6D,6E,6F,70,71,72,AA,BA,7D,B8,5D,20AC,B5,F6,73,74,75,76,77,78,79,7A,A1,BF,40,DD,5B,AE,A2,A3,A5,B7,A9,A7,B6,BC,BD,BE,AC,7C,AF,A8,5C,D7,";
            Map3 = "FE,41,42,43,44,45,46,47,48,49,AD,F4,7E,F2,F3,F5,E6,4A,4B,4C,4D,4E,4F,50,51,52,B9,FB,FC,F9,FA,FF,B4,F7,53,54,55,56,57,58,59,5A,B2,D4,5E,D2,D3,D5,30,31,32,33,34,35,36,37,38,39,B3,DB,DC,D9,DA,9F,";
            break;
        case 1250:
            EncodingName = "windows-1250";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "20AC,81,201A,83,201E,2026,2020,2021,88,2030,0160,2039,015A,0164,017D,0179,90,2018,2019,201C,201D,2022,2013,2014,98,2122,0161,203A,015B,0165,017E,017A,A0,02C7,02D8,0141,A4,0104,A6,A7,A8,A9,015E,AB,AC,AD,AE,017B,B0,B1,02DB,0142,B4,B5,B6,B7,B8,0105,015F,BB,013D,02DD,013E,017C,";
            Map3 = "0154,C1,C2,0102,C4,0139,0106,C7,010C,C9,0118,CB,011A,CD,CE,010E,0110,0143,0147,D3,D4,0150,D6,D7,0158,016E,DA,0170,DC,DD,0162,DF,0155,E1,E2,0103,E4,013A,0107,E7,010D,E9,0119,EB,011B,ED,EE,010F,0111,0144,0148,F3,F4,0151,F6,F7,0159,016F,FA,0171,FC,FD,0163,02D9,";
            break;
        case 1251:
            EncodingName = "windows-1251";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "0402,0403,201A,0453,201E,2026,2020,2021,20AC,2030,0409,2039,040A,040C,040B,040F,0452,2018,2019,201C,201D,2022,2013,2014,98,2122,0459,203A,045A,045C,045B,045F,A0,040E,045E,0408,A4,0490,A6,A7,0401,A9,0404,AB,AC,AD,AE,0407,B0,B1,0406,0456,0491,B5,B6,B7,0451,2116,0454,BB,0458,0405,0455,0457,";
            Map3 = "0410,0411,0412,0413,0414,0415,0416,0417,0418,0419,041A,041B,041C,041D,041E,041F,0420,0421,0422,0423,0424,0425,0426,0427,0428,0429,042A,042B,042C,042D,042E,042F,0430,0431,0432,0433,0434,0435,0436,0437,0438,0439,043A,043B,043C,043D,043E,043F,0440,0441,0442,0443,0444,0445,0446,0447,0448,0449,044A,044B,044C,044D,044E,044F,";
            break;
        case 1252:
            EncodingName = "windows-1252";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "20AC,81,201A,0192,201E,2026,2020,2021,02C6,2030,0160,2039,0152,8D,017D,8F,90,2018,2019,201C,201D,2022,2013,2014,02DC,2122,0161,203A,0153,9D,017E,0178,A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,AA,AB,AC,AD,AE,AF,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,BA,BB,BC,BD,BE,BF,";
            Map3 = "C0,C1,C2,C3,C4,C5,C6,C7,C8,C9,CA,CB,CC,CD,CE,CF,D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,DA,DB,DC,DD,DE,DF,E0,E1,E2,E3,E4,E5,E6,E7,E8,E9,EA,EB,EC,ED,EE,EF,F0,F1,F2,F3,F4,F5,F6,F7,F8,F9,FA,FB,FC,FD,FE,FF,";
            break;
        case 1253:
            EncodingName = "windows-1253";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "20AC,81,201A,0192,201E,2026,2020,2021,88,2030,8A,2039,8C,8D,8E,8F,90,2018,2019,201C,201D,2022,2013,2014,98,2122,9A,203A,9C,9D,9E,9F,A0,0385,0386,A3,A4,A5,A6,A7,A8,A9,F8F9,AB,AC,AD,AE,2015,B0,B1,B2,B3,0384,B5,B6,B7,0388,0389,038A,BB,038C,BD,038E,038F,";
            Map3 = "0390,0391,0392,0393,0394,0395,0396,0397,0398,0399,039A,039B,039C,039D,039E,039F,03A0,03A1,F8FA,03A3,03A4,03A5,03A6,03A7,03A8,03A9,03AA,03AB,03AC,03AD,03AE,03AF,03B0,03B1,03B2,03B3,03B4,03B5,03B6,03B7,03B8,03B9,03BA,03BB,03BC,03BD,03BE,03BF,03C0,03C1,03C2,03C3,03C4,03C5,03C6,03C7,03C8,03C9,03CA,03CB,03CC,03CD,03CE,F8FB,";
            break;
        case 1254:
            EncodingName = "windows-1254";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "20AC,81,201A,0192,201E,2026,2020,2021,02C6,2030,0160,2039,0152,8D,8E,8F,90,2018,2019,201C,201D,2022,2013,2014,02DC,2122,0161,203A,0153,9D,9E,0178,A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,AA,AB,AC,AD,AE,AF,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,BA,BB,BC,BD,BE,BF,";
            Map3 = "C0,C1,C2,C3,C4,C5,C6,C7,C8,C9,CA,CB,CC,CD,CE,CF,011E,D1,D2,D3,D4,D5,D6,D7,D8,D9,DA,DB,DC,0130,015E,DF,E0,E1,E2,E3,E4,E5,E6,E7,E8,E9,EA,EB,EC,ED,EE,EF,011F,F1,F2,F3,F4,F5,F6,F7,F8,F9,FA,FB,FC,0131,015F,FF,";
            break;
        case 1255:
            EncodingName = "windows-1255";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "20AC,81,201A,0192,201E,2026,2020,2021,02C6,2030,8A,2039,8C,8D,8E,8F,90,2018,2019,201C,201D,2022,2013,2014,02DC,2122,9A,203A,9C,9D,9E,9F,A0,A1,A2,A3,20AA,A5,A6,A7,A8,A9,D7,AB,AC,AD,AE,AF,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,F7,BB,BC,BD,BE,BF,";
            Map3 = "05B0,05B1,05B2,05B3,05B4,05B5,05B6,05B7,05B8,05B9,05BA,05BB,05BC,05BD,05BE,05BF,05C0,05C1,05C2,05C3,05F0,05F1,05F2,05F3,05F4,F88D,F88E,F88F,F890,F891,F892,F893,05D0,05D1,05D2,05D3,05D4,05D5,05D6,05D7,05D8,05D9,05DA,05DB,05DC,05DD,05DE,05DF,05E0,05E1,05E2,05E3,05E4,05E5,05E6,05E7,05E8,05E9,05EA,F894,F895,200E,200F,F896,";
            break;
        case 1256:
            EncodingName = "windows-1256";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "20AC,067E,201A,0192,201E,2026,2020,2021,02C6,2030,0679,2039,0152,0686,0698,0688,06AF,2018,2019,201C,201D,2022,2013,2014,06A9,2122,0691,203A,0153,200C,200D,06BA,A0,060C,A2,A3,A4,A5,A6,A7,A8,A9,06BE,AB,AC,AD,AE,AF,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,061B,BB,BC,BD,BE,061F,";
            Map3 = "06C1,0621,0622,0623,0624,0625,0626,0627,0628,0629,062A,062B,062C,062D,062E,062F,0630,0631,0632,0633,0634,0635,0636,D7,0637,0638,0639,063A,0640,0641,0642,0643,E0,0644,E2,0645,0646,0647,0648,E7,E8,E9,EA,EB,0649,064A,EE,EF,064B,064C,064D,064E,F4,064F,0650,F7,0651,F9,0652,FB,FC,200E,200F,06D2,";
            break;
        case 1257:
            EncodingName = "windows-1257";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "20AC,81,201A,83,201E,2026,2020,2021,88,2030,8A,2039,8C,A8,02C7,B8,90,2018,2019,201C,201D,2022,2013,2014,98,2122,9A,203A,9C,AF,02DB,9F,A0,F8FC,A2,A3,A4,F8FD,A6,A7,D8,A9,0156,AB,AC,AD,AE,C6,B0,B1,B2,B3,B4,B5,B6,B7,F8,B9,0157,BB,BC,BD,BE,E6,";
            Map3 = "0104,012E,0100,0106,C4,C5,0118,0112,010C,C9,0179,0116,0122,0136,012A,013B,0160,0143,0145,D3,014C,D5,D6,D7,0172,0141,015A,016A,DC,017B,017D,DF,0105,012F,0101,0107,E4,E5,0119,0113,010D,E9,017A,0117,0123,0137,012B,013C,0161,0144,0146,F3,014D,F5,F6,F7,0173,0142,015B,016B,FC,017C,017E,02D9,";
            break;
        case 1258:
            EncodingName = "windows-1258";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "20AC,81,201A,0192,201E,2026,2020,2021,02C6,2030,8A,2039,0152,8D,8E,8F,90,2018,2019,201C,201D,2022,2013,2014,02DC,2122,9A,203A,0153,9D,9E,0178,A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,AA,AB,AC,AD,AE,AF,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,BA,BB,BC,BD,BE,BF,";
            Map3 = "C0,C1,C2,0102,C4,C5,C6,C7,C8,C9,CA,CB,0300,CD,CE,CF,0110,D1,0309,D3,D4,01A0,D6,D7,D8,D9,DA,DB,DC,01AF,0303,DF,E0,E1,E2,0103,E4,E5,E6,E7,E8,E9,EA,EB,0301,ED,EE,EF,0111,F1,0323,F3,F4,01A1,F6,F7,F8,F9,FA,FB,FC,01B0,20AB,FF,";
            break;
        case 10000:
            EncodingName = "macintosh";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "C4,C5,C7,C9,D1,D6,DC,E1,E0,E2,E4,E3,E5,E7,E9,E8,EA,EB,ED,EC,EE,EF,F1,F3,F2,F4,F6,F5,FA,F9,FB,FC,2020,B0,A2,A3,A7,2022,B6,DF,AE,A9,2122,B4,A8,2260,C6,D8,221E,B1,2264,2265,A5,B5,2202,2211,220F,03C0,222B,AA,BA,2126,E6,F8,";
            Map3 = "BF,A1,AC,221A,0192,2248,2206,AB,BB,2026,A0,C0,C3,D5,0152,0153,2013,2014,201C,201D,2018,2019,F7,25CA,FF,0178,2044,20AC,2039,203A,FB01,FB02,2021,B7,201A,201E,2030,C2,CA,C1,CB,C8,CD,CE,CF,CC,D3,D4,F8FF,D2,DA,DB,D9,0131,02C6,02DC,AF,02D8,02D9,02DA,B8,02DD,02DB,02C7,";
            break;
        case 10004:
            EncodingName = "x-mac-arabic";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "C4,A0,C7,C9,D1,D6,DC,E1,E0,E2,E4,06BA,AB,E7,E9,E8,EA,EB,ED,2026,EE,EF,F1,F3,BB,F4,F6,F7,FA,F9,FB,FC,F827,F828,F829,F82A,F82B,066A,F82C,F82D,F82E,F82F,F830,F831,060C,F832,F833,F834,0660,0661,0662,0663,0664,0665,0666,0667,0668,0669,F835,061B,F836,F837,F838,061F,";
            Map3 = "066D,0621,0622,0623,0624,0625,0626,0627,0628,0629,062A,062B,062C,062D,062E,062F,0630,0631,0632,0633,0634,0635,0636,0637,0638,0639,063A,F839,F83A,F83B,F83C,F83D,0640,0641,0642,0643,0644,0645,0646,0647,0648,0649,064A,064B,064C,064D,064E,064F,0650,0651,0652,067E,0679,0686,06D5,06A4,06AF,0688,0691,F83E,F83F,F840,0698,06D2,";
            break;
        case 10005:
            EncodingName = "x-mac-hebrew";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "C4,C5,C7,C9,D1,D6,DC,E1,E0,E2,E4,E3,E5,E7,E9,E8,EA,EB,ED,EC,EE,EF,F1,F3,F2,F4,F6,F5,FA,F9,FB,FC,F7FC,F7FD,F7FE,F7FF,A4,F800,20AA,F801,F802,F803,F804,F805,F806,F807,F808,F809,F80A,F80B,F80C,F80D,F80E,F80F,F810,F811,F812,F813,F814,F815,F816,F817,F818,F819,";
            Map3 = "F81A,201E,F81B,F81C,F81D,05BD,05BC,F81E,F81F,2026,A0,05B8,05B7,05B5,05B6,05B4,2013,2014,201C,201D,2018,2019,F820,F821,05BE,05B0,05B2,05B1,05BB,05C1,05B8,05B3,05D0,05D1,05D2,05D3,05D4,05D5,05D6,05D7,05D8,05D9,05DA,05DB,05DC,05DD,05DE,05DF,05E0,05E1,05E2,05E3,05E4,05E5,05E6,05E7,05E8,05E9,05EA,F822,F823,F824,F825,F826,";
            break;
        case 10006:
            EncodingName = "x-mac-greek";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "C4,B9,B2,C9,B3,D6,DC,0385,E0,E2,E4,0384,A8,E7,E9,E8,EA,EB,A3,2122,EE,EF,2022,BD,2030,F4,F6,A6,AD,F9,FB,FC,2020,0393,0394,0398,039B,039E,03A0,DF,AE,A9,03A3,03AA,A7,2260,B0,0387,0391,B1,2264,2265,A5,0392,0395,0396,0397,0399,039A,039C,03A6,03AB,03A8,03A9,";
            Map3 = "03AC,039D,AC,039F,03A1,2248,03A4,AB,BB,2026,A0,03A5,03A7,0386,0388,0153,2013,2015,201C,201D,2018,2019,F7,0389,038A,038C,038E,03AD,03AE,03AF,03CC,038F,03CD,03B1,03B2,03C8,03B4,03B5,03C6,03B3,03B7,03B9,03BE,03BA,03BB,03BC,03BD,03BF,03C0,03CE,03C1,03C3,03C4,03B8,03C9,03C2,03C7,03C5,03B6,03CA,03CB,0390,03B0,F8A0,";
            break;
        case 10007:
            EncodingName = "x-mac-cyrillic";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "0410,0411,0412,0413,0414,0415,0416,0417,0418,0419,041A,041B,041C,041D,041E,041F,0420,0421,0422,0423,0424,0425,0426,0427,0428,0429,042A,042B,042C,042D,042E,042F,2020,B0,A2,A3,A7,2022,B6,0406,AE,A9,2122,0402,0452,2260,0403,0453,221E,B1,2264,2265,0456,B5,2202,0408,0404,0454,0407,0457,0409,0459,040A,045A,";
            Map3 = "0458,0405,AC,221A,0192,2248,2206,AB,BB,2026,A0,040B,045B,040C,045C,0455,2013,2014,201C,201D,2018,2019,F7,201E,040E,045E,040F,045F,2116,0401,0451,044F,0430,0431,0432,0433,0434,0435,0436,0437,0438,0439,043A,043B,043C,043D,043E,043F,0440,0441,0442,0443,0444,0445,0446,0447,0448,0449,044A,044B,044C,044D,044E,A4,";
            break;
        case 10010:
            EncodingName = "x-mac-romanian";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "C4,C5,C7,C9,D1,D6,DC,E1,E0,E2,E4,E3,E5,E7,E9,E8,EA,EB,ED,EC,EE,EF,F1,F3,F2,F4,F6,F5,FA,F9,FB,FC,2020,B0,A2,A3,A7,2022,B6,DF,AE,A9,2122,B4,A8,2260,0102,015E,221E,B1,2264,2265,A5,B5,2202,2211,220F,03C0,222B,AA,BA,2126,0103,015F,";
            Map3 = "BF,A1,AC,221A,0192,2248,2206,AB,BB,2026,A0,C0,C3,D5,0152,0153,2013,2014,201C,201D,2018,2019,F7,25CA,FF,0178,2044,A4,2039,203A,0162,0163,2021,B7,201A,201E,2030,C2,CA,C1,CB,C8,CD,CE,CF,CC,D3,D4,F8FF,D2,DA,DB,D9,0131,02C6,02DC,AF,02D8,02D9,02DA,B8,02DD,02DB,02C7,";
            break;
        case 10017:
            EncodingName = "x-mac-ukrainian";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "0410,0411,0412,0413,0414,0415,0416,0417,0418,0419,041A,041B,041C,041D,041E,041F,0420,0421,0422,0423,0424,0425,0426,0427,0428,0429,042A,042B,042C,042D,042E,042F,2020,B0,0490,A3,A7,2022,B6,0406,AE,A9,2122,0402,0452,2260,0403,0453,221E,B1,2264,2265,0456,B5,0491,0408,0404,0454,0407,0457,0409,0459,040A,045A,";
            Map3 = "0458,0405,AC,221A,0192,2248,2206,AB,BB,2026,A0,040B,045B,040C,045C,0455,2013,2014,201C,201D,2018,2019,F7,201E,040E,045E,040F,045F,2116,0401,0451,044F,0430,0431,0432,0433,0434,0435,0436,0437,0438,0439,043A,043B,043C,043D,043E,043F,0440,0441,0442,0443,0444,0445,0446,0447,0448,0449,044A,044B,044C,044D,044E,A4,";
            break;
        case 10021:
            EncodingName = "x-mac-thai";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,3F,";
            Map2 = "AB,BB,2026,0E48,0E49,0E4A,0E4B,0E4C,0E48,0E49,0E4A,0E4B,0E4C,201C,201D,0E4D,3F,2022,0E31,0E47,0E34,0E35,0E36,0E37,0E48,0E49,0E4A,0E4B,0E4C,2018,2019,3F,A0,0E01,0E02,0E03,0E04,0E05,0E06,0E07,0E08,0E09,0E0A,0E0B,0E0C,0E0D,0E0E,0E0F,0E10,0E11,0E12,0E13,0E14,0E15,0E16,0E17,0E18,0E19,0E1A,0E1B,0E1C,0E1D,0E1E,0E1F,";
            Map3 = "0E20,0E21,0E22,0E23,0E24,0E25,0E26,0E27,0E28,0E29,0E2A,0E2B,0E2C,0E2D,0E2E,0E2F,0E30,0E31,0E32,0E33,0E34,0E35,0E36,0E37,0E38,0E39,0E3A,FEFF,200B,2013,2014,0E3F,0E40,0E41,0E42,0E43,0E44,0E45,0E46,0E47,0E48,0E49,0E4A,0E4B,0E4C,0E4D,2122,0E4F,0E50,0E51,0E52,0E53,0E54,0E55,0E56,0E57,0E58,0E59,AE,A9,3F,3F,3F,3F,";
            break;
        case 10029:
            EncodingName = "x-mac-ce";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "C4,0100,0101,C9,0104,D6,DC,E1,0105,010C,E4,010D,0106,0107,E9,0179,017A,010E,ED,010F,0112,0113,0116,F3,0117,F4,F6,F5,FA,011A,011B,FC,2020,B0,0118,A3,A7,2022,B6,DF,AE,A9,2122,0119,A8,2260,0123,012E,012F,012A,2264,2265,012B,0136,2202,2211,0142,013B,013C,013D,013E,0139,013A,0145,";
            Map3 = "0146,0143,AC,221A,0144,0147,2206,AB,BB,2026,A0,0148,0150,D5,0151,014C,2013,2014,201C,201D,2018,2019,F7,25CA,014D,0154,0155,0158,2039,203A,0159,0156,0157,0160,201A,201E,0161,015A,015B,C1,0164,0165,CD,017D,017E,016A,D3,D4,016B,016E,DA,016F,0170,0171,0172,0173,DD,FD,0137,017B,0141,017C,0122,02C7,";
            break;
        case 10079:
            EncodingName = "x-mac-icelandic";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "C4,C5,C7,C9,D1,D6,DC,E1,E0,E2,E4,E3,E5,E7,E9,E8,EA,EB,ED,EC,EE,EF,F1,F3,F2,F4,F6,F5,FA,F9,FB,FC,DD,B0,A2,A3,A7,2022,B6,DF,AE,A9,2122,B4,A8,2260,C6,D8,221E,B1,2264,2265,A5,B5,2202,2211,220F,03C0,222B,AA,BA,2126,E6,F8,";
            Map3 = "BF,A1,AC,221A,0192,2248,2206,AB,BB,2026,A0,C0,C3,D5,0152,0153,2013,2014,201C,201D,2018,2019,F7,25CA,FF,0178,2044,A4,D0,F0,DE,FE,FD,B7,201A,201E,2030,C2,CA,C1,CB,C8,CD,CE,CF,CC,D3,D4,F8FF,D2,DA,DB,D9,0131,02C6,02DC,AF,02D8,02D9,02DA,B8,02DD,02DB,02C7,";
            break;
        case 10081:
            EncodingName = "x-mac-turkish";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "C4,C5,C7,C9,D1,D6,DC,E1,E0,E2,E4,E3,E5,E7,E9,E8,EA,EB,ED,EC,EE,EF,F1,F3,F2,F4,F6,F5,FA,F9,FB,FC,2020,B0,A2,A3,A7,2022,B6,DF,AE,A9,2122,B4,A8,2260,C6,D8,221E,B1,2264,2265,A5,B5,2202,2211,220F,03C0,222B,AA,BA,2126,E6,F8,";
            Map3 = "BF,A1,AC,221A,0192,2248,2206,AB,BB,2026,A0,C0,C3,D5,0152,0153,2013,2014,201C,201D,2018,2019,F7,25CA,FF,0178,011E,011F,0130,0131,015E,015F,2021,B7,201A,201E,2030,C2,CA,C1,CB,C8,CD,CE,CF,CC,D3,D4,F8FF,D2,DA,DB,D9,F8A0,02C6,02DC,AF,02D8,02D9,02DA,B8,02DD,02DB,02C7,";
            break;
        case 10082:
            EncodingName = "x-mac-croatian";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "C4,C5,C7,C9,D1,D6,DC,E1,E0,E2,E4,E3,E5,E7,E9,E8,EA,EB,ED,EC,EE,EF,F1,F3,F2,F4,F6,F5,FA,F9,FB,FC,2020,B0,A2,A3,A7,2022,B6,DF,AE,0160,2122,B4,A8,2260,017D,D8,221E,B1,2264,2265,2206,B5,2202,2211,220F,0161,222B,AA,BA,2126,017E,F8,";
            Map3 = "BF,A1,AC,221A,0192,2248,0106,AB,010C,2026,A0,C0,C3,D5,0152,0153,0110,2014,201C,201D,2018,2019,F7,25CA,F8FF,A9,2044,A4,2039,203A,C6,BB,2013,B7,201A,201E,2030,C2,0107,C1,010D,C8,CD,CE,CF,CC,D3,D4,0111,D2,DA,DB,D9,0131,02C6,02DC,AF,03C0,CB,02DA,B8,CA,E6,02C7,";
            break;
        case 20105:
            EncodingName = "x-IA5";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,A4,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,203E,2207,";
            Map2 = "3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,";
            Map3 = "3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,";
            break;
        case 20106:
            EncodingName = "x-IA5-German";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "A7,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,C4,D6,DC,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,E4,F6,FC,DF,7F,";
            Map2 = "3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,";
            Map3 = "3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,";
            break;
        case 20107:
            EncodingName = "x-IA5-Swedish";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,A4,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "C9,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,C4,D6,C5,DC,5F,E9,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,E4,F6,E5,FC,7F,";
            Map2 = "3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,";
            Map3 = "3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,";
            break;
        case 20108:
            EncodingName = "x-IA5-Norwegian";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,A7,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,C6,D8,C5,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,E6,F8,E5,7C,7F,";
            Map2 = "3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,";
            Map3 = "3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,";
            break;
        case 20127:
            EncodingName = "us-ascii";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,";
            Map3 = "3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,3F,";
            break;
        case 20269:
            EncodingName = "x-cp20269";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,A4,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,F8F6,";
            Map2 = "80,81,82,83,84,85,86,87,88,89,8A,8B,8C,8D,8E,8F,90,91,92,93,94,95,96,97,98,99,9A,9B,9C,9D,3F,3F,A0,A1,A2,A3,24,A5,23,A7,A4,2018,201C,AB,2190,2191,2192,2193,B0,B1,B2,B3,D7,B5,B6,B7,F7,2019,201D,BB,BC,BD,F8F7,BF,";
            Map3 = "3F,60,B4,5E,7E,AF,0306,F8F8,0308,3F,030A,0327,0332,030B,0328,030C,2015,B9,AE,A9,2122,2669,F8F9,F8FA,F8FB,F8FC,3F,3F,215B,215C,215D,215E,2126,C6,D0,F8FD,0126,3F,0132,013F,0141,D8,0152,BA,DE,0166,014A,0149,0138,E6,0111,F0,0127,0131,0133,0140,0142,F8,0153,DF,FE,0167,F8FE,F8FF,";
            break;
        case 20273:
            EncodingName = "IBM273";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,E2,7B,E0,E1,E3,E5,E7,F1,C4,2E,3C,28,2B,21,26,E9,EA,EB,E8,ED,EE,EF,EC,7E,DC,24,2A,29,3B,5E,2D,2F,C2,5B,C0,C1,C3,C5,C7,D1,F6,2C,25,5F,3E,3F,F8,C9,CA,CB,C8,CD,CE,CF,CC,60,3A,23,A7,27,3D,22,";
            Map2 = "D8,61,62,63,64,65,66,67,68,69,AB,BB,F0,FD,FE,B1,B0,6A,6B,6C,6D,6E,6F,70,71,72,AA,BA,E6,B8,C6,A4,B5,DF,73,74,75,76,77,78,79,7A,A1,BF,D0,DD,DE,AE,A2,A3,A5,B7,A9,40,B6,BC,BD,BE,AC,7C,AF,A8,B4,D7,";
            Map3 = "E4,41,42,43,44,45,46,47,48,49,AD,F4,A6,F2,F3,F5,FC,4A,4B,4C,4D,4E,4F,50,51,52,B9,FB,7D,F9,FA,FF,D6,F7,53,54,55,56,57,58,59,5A,B2,D4,5C,D2,D3,D5,30,31,32,33,34,35,36,37,38,39,B3,DB,5D,D9,DA,9F,";
            break;
        case 20277:
            EncodingName = "IBM277";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,E2,E4,E0,E1,E3,7D,E7,F1,23,2E,3C,28,2B,21,26,E9,EA,EB,E8,ED,EE,EF,EC,DF,A4,C5,2A,29,3B,5E,2D,2F,C2,C4,C0,C1,C3,24,C7,D1,F8,2C,25,5F,3E,3F,A6,C9,CA,CB,C8,CD,CE,CF,CC,60,3A,C6,D8,27,3D,22,";
            Map2 = "40,61,62,63,64,65,66,67,68,69,AB,BB,F0,FD,FE,B1,B0,6A,6B,6C,6D,6E,6F,70,71,72,AA,BA,7B,B8,5B,5D,B5,FC,73,74,75,76,77,78,79,7A,A1,BF,D0,DD,DE,AE,A2,A3,A5,B7,A9,A7,B6,BC,BD,BE,AC,7C,AF,A8,B4,D7,";
            Map3 = "E6,41,42,43,44,45,46,47,48,49,AD,F4,F6,F2,F3,F5,E5,4A,4B,4C,4D,4E,4F,50,51,52,B9,FB,7E,F9,FA,FF,5C,F7,53,54,55,56,57,58,59,5A,B2,D4,D6,D2,D3,D5,30,31,32,33,34,35,36,37,38,39,B3,DB,DC,D9,DA,9F,";
            break;
        case 20278:
            EncodingName = "IBM278";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,E2,7B,E0,E1,E3,7D,E7,F1,A7,2E,3C,28,2B,21,26,60,EA,EB,E8,ED,EE,EF,EC,DF,A4,C5,2A,29,3B,5E,2D,2F,C2,23,C0,C1,C3,24,C7,D1,F6,2C,25,5F,3E,3F,F8,5C,CA,CB,C8,CD,CE,CF,CC,E9,3A,C4,D6,27,3D,22,";
            Map2 = "D8,61,62,63,64,65,66,67,68,69,AB,BB,F0,FD,FE,B1,B0,6A,6B,6C,6D,6E,6F,70,71,72,AA,BA,E6,B8,C6,5D,B5,FC,73,74,75,76,77,78,79,7A,A1,BF,D0,DD,DE,AE,A2,A3,A5,B7,A9,5B,B6,BC,BD,BE,AC,7C,AF,A8,B4,D7,";
            Map3 = "E4,41,42,43,44,45,46,47,48,49,AD,F4,A6,F2,F3,F5,E5,4A,4B,4C,4D,4E,4F,50,51,52,B9,FB,7E,F9,FA,FF,C9,F7,53,54,55,56,57,58,59,5A,B2,D4,40,D2,D3,D5,30,31,32,33,34,35,36,37,38,39,B3,DB,DC,D9,DA,9F,";
            break;
        case 20280:
            EncodingName = "IBM280";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,E2,E4,7B,E1,E3,E5,5C,F1,B0,2E,3C,28,2B,21,26,5D,EA,EB,7D,ED,EE,EF,7E,DF,E9,24,2A,29,3B,5E,2D,2F,C2,C4,C0,C1,C3,C5,C7,D1,F2,2C,25,5F,3E,3F,F8,C9,CA,CB,C8,CD,CE,CF,CC,F9,3A,A3,A7,27,3D,22,";
            Map2 = "D8,61,62,63,64,65,66,67,68,69,AB,BB,F0,FD,FE,B1,5B,6A,6B,6C,6D,6E,6F,70,71,72,AA,BA,E6,B8,C6,A4,B5,EC,73,74,75,76,77,78,79,7A,A1,BF,D0,DD,DE,AE,A2,23,A5,B7,A9,40,B6,BC,BD,BE,AC,7C,AF,A8,B4,D7,";
            Map3 = "E0,41,42,43,44,45,46,47,48,49,AD,F4,F6,A6,F3,F5,E8,4A,4B,4C,4D,4E,4F,50,51,52,B9,FB,FC,60,FA,FF,E7,F7,53,54,55,56,57,58,59,5A,B2,D4,D6,D2,D3,D5,30,31,32,33,34,35,36,37,38,39,B3,DB,DC,D9,DA,9F,";
            break;
        case 20284:
            EncodingName = "IBM284";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,E2,E4,E0,E1,E3,E5,E7,A6,5B,2E,3C,28,2B,7C,26,E9,EA,EB,E8,ED,EE,EF,EC,DF,5D,24,2A,29,3B,AC,2D,2F,C2,C4,C0,C1,C3,C5,C7,23,F1,2C,25,5F,3E,3F,F8,C9,CA,CB,C8,CD,CE,CF,CC,60,3A,D1,40,27,3D,22,";
            Map2 = "D8,61,62,63,64,65,66,67,68,69,AB,BB,F0,FD,FE,B1,B0,6A,6B,6C,6D,6E,6F,70,71,72,AA,BA,E6,B8,C6,A4,B5,A8,73,74,75,76,77,78,79,7A,A1,BF,D0,DD,DE,AE,A2,A3,A5,B7,A9,A7,B6,BC,BD,BE,5E,21,AF,7E,B4,D7,";
            Map3 = "7B,41,42,43,44,45,46,47,48,49,AD,F4,F6,F2,F3,F5,7D,4A,4B,4C,4D,4E,4F,50,51,52,B9,FB,FC,F9,FA,FF,5C,F7,53,54,55,56,57,58,59,5A,B2,D4,D6,D2,D3,D5,30,31,32,33,34,35,36,37,38,39,B3,DB,DC,D9,DA,9F,";
            break;
        case 20285:
            EncodingName = "IBM285";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,E2,E4,E0,E1,E3,E5,E7,F1,24,2E,3C,28,2B,7C,26,E9,EA,EB,E8,ED,EE,EF,EC,DF,21,A3,2A,29,3B,AC,2D,2F,C2,C4,C0,C1,C3,C5,C7,D1,A6,2C,25,5F,3E,3F,F8,C9,CA,CB,C8,CD,CE,CF,CC,60,3A,23,40,27,3D,22,";
            Map2 = "D8,61,62,63,64,65,66,67,68,69,AB,BB,F0,FD,FE,B1,B0,6A,6B,6C,6D,6E,6F,70,71,72,AA,BA,E6,B8,C6,A4,B5,AF,73,74,75,76,77,78,79,7A,A1,BF,D0,DD,DE,AE,A2,5B,A5,B7,A9,A7,B6,BC,BD,BE,5E,5D,7E,A8,B4,D7,";
            Map3 = "7B,41,42,43,44,45,46,47,48,49,AD,F4,F6,F2,F3,F5,7D,4A,4B,4C,4D,4E,4F,50,51,52,B9,FB,FC,F9,FA,FF,5C,F7,53,54,55,56,57,58,59,5A,B2,D4,D6,D2,D3,D5,30,31,32,33,34,35,36,37,38,39,B3,DB,DC,D9,DA,9F,";
            break;
        case 20290:
            EncodingName = "IBM290";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,FF61,FF62,FF63,FF64,FF65,FF66,FF67,FF68,FF69,A3,2E,3C,28,2B,7C,26,FF6A,FF6B,FF6C,FF6D,FF6E,FF6F,3F,FF70,3F,21,A5,2A,29,3B,AC,2D,2F,61,62,63,64,65,66,67,68,3F,2C,25,5F,3E,3F,5B,69,6A,6B,6C,6D,6E,6F,70,60,3A,23,40,27,3D,22,";
            Map2 = "5D,FF71,FF72,FF73,FF74,FF75,FF76,FF77,FF78,FF79,FF7A,71,FF7B,FF7C,FF7D,FF7E,FF7F,FF80,FF81,FF82,FF83,FF84,FF85,FF86,FF87,FF88,FF89,72,3F,FF8A,FF8B,FF8C,7E,203E,FF8D,FF8E,FF8F,FF90,FF91,FF92,FF93,FF94,FF95,73,FF96,FF97,FF98,FF99,5E,A2,5C,74,75,76,77,78,79,7A,FF9A,FF9B,FF9C,FF9D,FF9E,FF9F,";
            Map3 = "7B,41,42,43,44,45,46,47,48,49,3F,3F,3F,3F,3F,3F,7D,4A,4B,4C,4D,4E,4F,50,51,52,3F,3F,3F,3F,3F,3F,24,3F,53,54,55,56,57,58,59,5A,3F,3F,3F,3F,3F,3F,30,31,32,33,34,35,36,37,38,39,3F,3F,3F,3F,3F,9F,";
            break;
        case 20297:
            EncodingName = "IBM297";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,E2,E4,40,E1,E3,E5,5C,F1,B0,2E,3C,28,2B,21,26,7B,EA,EB,7D,ED,EE,EF,EC,DF,A7,24,2A,29,3B,5E,2D,2F,C2,C4,C0,C1,C3,C5,C7,D1,F9,2C,25,5F,3E,3F,F8,C9,CA,CB,C8,CD,CE,CF,CC,B5,3A,A3,E0,27,3D,22,";
            Map2 = "D8,61,62,63,64,65,66,67,68,69,AB,BB,F0,FD,FE,B1,5B,6A,6B,6C,6D,6E,6F,70,71,72,AA,BA,E6,B8,C6,A4,60,A8,73,74,75,76,77,78,79,7A,A1,BF,D0,DD,DE,AE,A2,23,A5,B7,A9,5D,B6,BC,BD,BE,AC,7C,AF,7E,B4,D7,";
            Map3 = "E9,41,42,43,44,45,46,47,48,49,AD,F4,F6,F2,F3,F5,E8,4A,4B,4C,4D,4E,4F,50,51,52,B9,FB,FC,A6,FA,FF,E7,F7,53,54,55,56,57,58,59,5A,B2,D4,D6,D2,D3,D5,30,31,32,33,34,35,36,37,38,39,B3,DB,DC,D9,DA,9F,";
            break;
        case 20420:
            EncodingName = "IBM420";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,FE7C,FE7D,0640,F8FC,FE80,FE81,FE82,FE83,A2,2E,3C,28,2B,7C,26,FE84,FE85,3F,3F,FE8B,FE8D,FE8E,FE8F,FE91,21,24,2A,29,3B,AC,2D,2F,FE93,FE95,FE97,FE99,FE9B,FE9D,FE9F,FEA1,A6,2C,25,5F,3E,3F,FEA3,FEA5,FEA7,FEA9,FEAB,FEAD,FEAF,F8F6,FEB3,060C,3A,23,40,27,3D,22,";
            Map2 = "F8F5,61,62,63,64,65,66,67,68,69,FEB7,F8F4,FEBB,F8F7,FEBF,FEC3,FEC7,6A,6B,6C,6D,6E,6F,70,71,72,FEC9,FECA,FECB,FECC,FECD,FECE,FECF,F7,73,74,75,76,77,78,79,7A,FED0,FED1,FED3,FED5,FED7,FED9,FEDB,FEDD,FEF5,FEF6,FEF7,FEF8,3F,3F,FEFB,FEFC,FEDF,FEE1,FEE3,FEE5,FEE7,FEE9,";
            Map3 = "061B,41,42,43,44,45,46,47,48,49,AD,FEEB,3F,FEEC,3F,FEED,061F,4A,4B,4C,4D,4E,4F,50,51,52,FEEF,FEF0,FEF1,FEF2,FEF3,0660,D7,2007,53,54,55,56,57,58,59,5A,0661,0662,3F,0663,0664,0665,30,31,32,33,34,35,36,37,38,39,3F,0666,0667,0668,0669,9F,";
            break;
        case 20423:
            EncodingName = "IBM423";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,0391,0392,0393,0394,0395,0396,0397,0398,0399,5B,2E,3C,28,2B,21,26,039A,039B,039C,039D,039E,039F,03A0,03A1,03A3,5D,24,2A,29,3B,5E,2D,2F,03A4,03A5,03A6,03A7,03A8,03A9,3F,3F,7C,2C,25,5F,3E,3F,3F,0386,0388,0389,A0,038A,038C,038E,038F,60,3A,A3,A7,27,3D,22,";
            Map2 = "C4,61,62,63,64,65,66,67,68,69,03B1,03B2,03B3,03B4,03B5,03B6,D6,6A,6B,6C,6D,6E,6F,70,71,72,03B7,03B8,03B9,03BA,03BB,03BC,DC,A8,73,74,75,76,77,78,79,7A,03BD,03BE,03BF,03C0,03C1,03C3,3F,03AC,03AD,03AE,03CA,03AF,03CC,03CD,03CB,03CE,03C2,03C4,03C5,03C6,03C7,03C8,";
            Map3 = "B8,41,42,43,44,45,46,47,48,49,AD,03C9,E2,E0,E4,EA,B4,4A,4B,4C,4D,4E,4F,50,51,52,B1,E9,E8,EB,EE,EF,B0,3F,53,54,55,56,57,58,59,5A,BD,F6,F4,FB,F9,FC,30,31,32,33,34,35,36,37,38,39,FF,E7,C7,3F,3F,9F,";
            break;
        case 20424:
            EncodingName = "IBM424";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,05D0,05D1,05D2,05D3,05D4,05D5,05D6,05D7,05D8,A2,2E,3C,28,2B,7C,26,05D9,05DA,05DB,05DC,05DD,05DE,05DF,05E0,05E1,21,24,2A,29,3B,AC,2D,2F,05E2,05E3,05E4,05E5,05E6,05E7,05E8,05E9,A6,2C,25,5F,3E,3F,3F,05EA,3F,3F,A0,3F,3F,3F,2017,60,3A,23,40,27,3D,22,";
            Map2 = "3F,61,62,63,64,65,66,67,68,69,AB,BB,3F,3F,3F,B1,B0,6A,6B,6C,6D,6E,6F,70,71,72,3F,3F,3F,B8,3F,A4,B5,7E,73,74,75,76,77,78,79,7A,3F,3F,3F,3F,3F,AE,5E,A3,A5,2022,A9,A7,B6,BC,BD,BE,5B,5D,203E,A8,B4,D7,";
            Map3 = "7B,41,42,43,44,45,46,47,48,49,AD,3F,3F,3F,3F,3F,7D,4A,4B,4C,4D,4E,4F,50,51,52,B9,3F,3F,3F,3F,3F,5C,F7,53,54,55,56,57,58,59,5A,B2,3F,3F,3F,3F,3F,30,31,32,33,34,35,36,37,38,39,B3,3F,3F,3F,3F,9F,";
            break;
        case 20833:
            EncodingName = "x-EBCDIC-Korean";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,3F,FFA0,FFA1,FFA2,FFA3,FFA4,FFA5,FFA6,FFA7,A2,2E,3C,28,2B,7C,26,3F,FFA8,FFA9,FFAA,FFAB,FFAC,FFAD,FFAE,FFAF,21,24,2A,29,3B,AC,2D,2F,FFB0,FFB1,FFB2,FFB3,FFB4,FFB5,FFB6,FFB7,A6,2C,25,5F,3E,3F,5B,3F,FFB8,FFB9,FFBA,FFBB,FFBC,FFBD,FFBE,60,3A,23,40,27,3D,22,";
            Map2 = "5D,61,62,63,64,65,66,67,68,69,FFC2,FFC3,FFC4,FFC5,FFC6,FFC7,3F,6A,6B,6C,6D,6E,6F,70,71,72,FFCA,FFCB,FFCC,FFCD,FFCE,FFCF,203E,7E,73,74,75,76,77,78,79,7A,FFD2,FFD3,FFD4,FFD5,FFD6,FFD7,5E,3F,5C,3F,3F,3F,3F,3F,3F,3F,FFDA,FFDB,FFDC,3F,3F,3F,";
            Map3 = "7B,41,42,43,44,45,46,47,48,49,3F,3F,3F,3F,3F,3F,7D,4A,4B,4C,4D,4E,4F,50,51,52,3F,3F,3F,3F,3F,3F,20A9,3F,53,54,55,56,57,58,59,5A,3F,3F,3F,3F,3F,3F,30,31,32,33,34,35,36,37,38,39,3F,3F,3F,3F,3F,9F,";
            break;
        case 20838:
            EncodingName = "IBM-Thai";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,0E01,0E02,0E03,0E04,0E05,0E06,0E07,5B,A2,2E,3C,28,2B,7C,26,0E48,0E08,0E09,0E0A,0E0B,0E0C,0E0D,0E0E,5D,21,24,2A,29,3B,AC,2D,2F,0E0F,0E10,0E11,0E12,0E13,0E14,0E15,5E,A6,2C,25,5F,3E,3F,0E3F,0E4E,0E16,0E17,0E18,0E19,0E1A,0E1B,0E1C,60,3A,23,40,27,3D,22,";
            Map2 = "0E4F,61,62,63,64,65,66,67,68,69,0E1D,0E1E,0E1F,0E20,0E21,0E22,0E5A,6A,6B,6C,6D,6E,6F,70,71,72,0E23,0E24,0E25,0E26,0E27,0E28,0E5B,7E,73,74,75,76,77,78,79,7A,0E29,0E2A,0E2B,0E2C,0E2D,0E2E,0E50,0E51,0E52,0E53,0E54,0E55,0E56,0E57,0E58,0E59,0E2F,0E30,0E31,0E32,0E33,0E34,";
            Map3 = "7B,41,42,43,44,45,46,47,48,49,0E49,0E35,0E36,0E37,0E38,0E39,7D,4A,4B,4C,4D,4E,4F,50,51,52,0E3A,0E40,0E41,0E42,0E43,0E44,5C,0E4A,53,54,55,56,57,58,59,5A,0E45,0E46,0E47,0E48,0E49,0E4A,30,31,32,33,34,35,36,37,38,39,0E4B,0E4C,0E4D,3F,3F,9F,";
            break;
        case 20866:
            EncodingName = "koi8-r";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "2500,2502,250C,2510,2514,2518,251C,2524,252C,2534,253C,2580,2584,2588,258C,2590,2591,2592,2593,2320,25A0,2219,221A,2248,2264,2265,A0,2321,B0,B2,B7,F7,2550,2551,2552,0451,2553,2554,2555,2556,2557,2558,2559,255A,255B,255C,255D,255E,255F,2560,2561,0401,2562,2563,2564,2565,2566,2567,2568,2569,256A,256B,256C,A9,";
            Map3 = "044E,0430,0431,0446,0434,0435,0444,0433,0445,0438,0439,043A,043B,043C,043D,043E,043F,044F,0440,0441,0442,0443,0436,0432,044C,044B,0437,0448,044D,0449,0447,044A,042E,0410,0411,0426,0414,0415,0424,0413,0425,0418,0419,041A,041B,041C,041D,041E,041F,042F,0420,0421,0422,0423,0416,0412,042C,042B,0417,0428,042D,0429,0427,042A,";
            break;
        case 20871:
            EncodingName = "IBM871";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,E2,E4,E0,E1,E3,E5,E7,F1,DE,2E,3C,28,2B,21,26,E9,EA,EB,E8,ED,EE,EF,EC,DF,C6,24,2A,29,3B,D6,2D,2F,C2,C4,C0,C1,C3,C5,C7,D1,A6,2C,25,5F,3E,3F,F8,C9,CA,CB,C8,CD,CE,CF,CC,F0,3A,23,D0,27,3D,22,";
            Map2 = "D8,61,62,63,64,65,66,67,68,69,AB,BB,60,FD,7B,B1,B0,6A,6B,6C,6D,6E,6F,70,71,72,AA,BA,7D,B8,5D,A4,B5,F6,73,74,75,76,77,78,79,7A,A1,BF,40,DD,5B,AE,A2,A3,A5,B7,A9,A7,B6,BC,BD,BE,AC,7C,AF,A8,5C,D7,";
            Map3 = "FE,41,42,43,44,45,46,47,48,49,AD,F4,7E,F2,F3,F5,E6,4A,4B,4C,4D,4E,4F,50,51,52,B9,FB,FC,F9,FA,FF,B4,F7,53,54,55,56,57,58,59,5A,B2,D4,5E,D2,D3,D5,30,31,32,33,34,35,36,37,38,39,B3,DB,DC,D9,DA,9F,";
            break;
        case 20880:
            EncodingName = "IBM880";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,0452,0453,0451,0454,0455,0456,0457,0458,5B,2E,3C,28,2B,21,26,0459,045A,045B,045C,045E,045F,042A,2116,0402,5D,24,2A,29,3B,5E,2D,2F,0403,0401,0404,0405,0406,0407,0408,0409,7C,2C,25,5F,3E,3F,040A,040B,040C,AD,040E,040F,044E,0430,0431,60,3A,23,40,27,3D,22,";
            Map2 = "0446,61,62,63,64,65,66,67,68,69,0434,0435,0444,0433,0445,0438,0439,6A,6B,6C,6D,6E,6F,70,71,72,043A,043B,043C,043D,043E,043F,044F,7E,73,74,75,76,77,78,79,7A,0440,0441,0442,0443,0436,0432,044C,044B,0437,0448,044D,0449,0447,044A,042E,0410,0411,0426,0414,0415,0424,0413,";
            Map3 = "7B,41,42,43,44,45,46,47,48,49,0425,0418,0419,041A,041B,041C,7D,4A,4B,4C,4D,4E,4F,50,51,52,041D,041E,041F,042F,0420,0421,5C,A4,53,54,55,56,57,58,59,5A,0422,0423,0416,0412,042C,042B,30,31,32,33,34,35,36,37,38,39,0417,0428,042D,0429,0427,9F,";
            break;
        case 20905:
            EncodingName = "IBM905";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,E2,E4,E0,E1,3F,010B,7B,F1,C7,2E,3C,28,2B,21,26,E9,EA,EB,E8,ED,EE,EF,EC,DF,011E,0130,2A,29,3B,5E,2D,2F,C2,C4,C0,C1,3F,010A,5B,D1,015F,2C,25,5F,3E,3F,3F,C9,CA,CB,C8,CD,CE,CF,CC,0131,3A,D6,015E,27,3D,DC,";
            Map2 = "02D8,61,62,63,64,65,66,67,68,69,0127,0109,015D,016D,3F,7C,B0,6A,6B,6C,6D,6E,6F,70,71,72,0125,011D,0135,B8,3F,A4,B5,F6,73,74,75,76,77,78,79,7A,0126,0108,015C,016C,3F,40,02D9,A3,017C,7D,017B,A7,5D,B7,BD,24,0124,011C,0134,A8,B4,D7,";
            Map3 = "E7,41,42,43,44,45,46,47,48,49,AD,F4,7E,F2,F3,0121,011F,4A,4B,4C,4D,4E,4F,50,51,52,60,FB,5C,F9,FA,3F,FC,F7,53,54,55,56,57,58,59,5A,B2,D4,23,D2,D3,0120,30,31,32,33,34,35,36,37,38,39,B3,DB,22,D9,DA,9F,";
            break;
        case 20924:
            EncodingName = "IBM924";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,0A,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,85,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,E2,E4,E0,E1,E3,E5,E7,F1,DD,2E,3C,28,2B,7C,26,E9,EA,EB,E8,ED,EE,EF,EC,DF,21,24,2A,29,3B,5E,2D,2F,C2,C4,C0,C1,C3,C5,C7,D1,0160,2C,25,5F,3E,3F,F8,C9,CA,CB,C8,CD,CE,CF,CC,60,3A,23,40,27,3D,22,";
            Map2 = "D8,61,62,63,64,65,66,67,68,69,AB,BB,F0,FD,FE,B1,B0,6A,6B,6C,6D,6E,6F,70,71,72,AA,BA,E6,017E,C6,20AC,B5,7E,73,74,75,76,77,78,79,7A,A1,BF,D0,5B,DE,AE,A2,A3,A5,B7,A9,A7,B6,0152,0153,0178,AC,0161,AF,5D,017D,D7,";
            Map3 = "7B,41,42,43,44,45,46,47,48,49,AD,F4,F6,F2,F3,F5,7D,4A,4B,4C,4D,4E,4F,50,51,52,B9,FB,FC,F9,FA,FF,5C,F7,53,54,55,56,57,58,59,5A,B2,D4,D6,D2,D3,D5,30,31,32,33,34,35,36,37,38,39,B3,DB,DC,D9,DA,9F,";
            break;
        case 21025:
            EncodingName = "cp1025";
            Map0 = "00,01,02,03,9C,09,86,7F,97,8D,8E,0B,0C,0D,0E,0F,10,11,12,13,9D,85,08,87,18,19,92,8F,1C,1D,1E,1F,80,81,82,83,84,0A,17,1B,88,89,8A,8B,8C,05,06,07,90,91,16,93,94,95,96,04,98,99,9A,9B,14,15,9E,1A,";
            Map1 = "20,A0,0452,0453,0451,0454,0455,0456,0457,0458,5B,2E,3C,28,2B,21,26,0459,045A,045B,045C,045E,045F,042A,2116,0402,5D,24,2A,29,3B,5E,2D,2F,0403,0401,0404,0405,0406,0407,0408,0409,7C,2C,25,5F,3E,3F,040A,040B,040C,AD,040E,040F,044E,0430,0431,60,3A,23,40,27,3D,22,";
            Map2 = "0446,61,62,63,64,65,66,67,68,69,0434,0435,0444,0433,0445,0438,0439,6A,6B,6C,6D,6E,6F,70,71,72,043A,043B,043C,043D,043E,043F,044F,7E,73,74,75,76,77,78,79,7A,0440,0441,0442,0443,0436,0432,044C,044B,0437,0448,044D,0449,0447,044A,042E,0410,0411,0426,0414,0415,0424,0413,";
            Map3 = "7B,41,42,43,44,45,46,47,48,49,0425,0418,0419,041A,041B,041C,7D,4A,4B,4C,4D,4E,4F,50,51,52,041D,041E,041F,042F,0420,0421,5C,A7,53,54,55,56,57,58,59,5A,0422,0423,0416,0412,042C,042B,30,31,32,33,34,35,36,37,38,39,0417,0428,042D,0429,0427,9F,";
            break;
        case 21866:
            EncodingName = "koi8-u";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "2500,2502,250C,2510,2514,2518,251C,2524,252C,2534,253C,2580,2584,2588,258C,2590,2591,2592,2593,2320,25A0,2219,221A,2248,2264,2265,A0,2321,B0,B2,B7,F7,2550,2551,2552,0451,0454,2554,0456,0457,2557,2558,2559,255A,255B,0491,045E,255E,255F,2560,2561,0401,0404,2563,0406,0407,2566,2567,2568,2569,256A,0490,040E,A9,";
            Map3 = "044E,0430,0431,0446,0434,0435,0444,0433,0445,0438,0439,043A,043B,043C,043D,043E,043F,044F,0440,0441,0442,0443,0436,0432,044C,044B,0437,0448,044D,0449,0447,044A,042E,0410,0411,0426,0414,0415,0424,0413,0425,0418,0419,041A,041B,041C,041D,041E,041F,042F,0420,0421,0422,0423,0416,0412,042C,042B,0417,0428,042D,0429,0427,042A,";
            break;
        case 28591:
            EncodingName = "iso-8859-1";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "80,81,82,83,84,85,86,87,88,89,8A,8B,8C,8D,8E,8F,90,91,92,93,94,95,96,97,98,99,9A,9B,9C,9D,9E,9F,A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,AA,AB,AC,AD,AE,AF,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,BA,BB,BC,BD,BE,BF,";
            Map3 = "C0,C1,C2,C3,C4,C5,C6,C7,C8,C9,CA,CB,CC,CD,CE,CF,D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,DA,DB,DC,DD,DE,DF,E0,E1,E2,E3,E4,E5,E6,E7,E8,E9,EA,EB,EC,ED,EE,EF,F0,F1,F2,F3,F4,F5,F6,F7,F8,F9,FA,FB,FC,FD,FE,FF,";
            break;
        case 28592:
            EncodingName = "iso-8859-2";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "80,81,82,83,84,85,86,87,88,89,8A,8B,8C,8D,8E,8F,90,91,92,93,94,95,96,97,98,99,9A,9B,9C,9D,9E,9F,A0,0104,02D8,0141,A4,013D,015A,A7,A8,0160,015E,0164,0179,AD,017D,017B,B0,0105,02DB,0142,B4,013E,015B,02C7,B8,0161,015F,0165,017A,02DD,017E,017C,";
            Map3 = "0154,C1,C2,0102,C4,0139,0106,C7,010C,C9,0118,CB,011A,CD,CE,010E,0110,0143,0147,D3,D4,0150,D6,D7,0158,016E,DA,0170,DC,DD,0162,DF,0155,E1,E2,0103,E4,013A,0107,E7,010D,E9,0119,EB,011B,ED,EE,010F,0111,0144,0148,F3,F4,0151,F6,F7,0159,016F,FA,0171,FC,FD,0163,02D9,";
            break;
        case 28593:
            EncodingName = "iso-8859-3";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "80,81,82,83,84,85,86,87,88,89,8A,8B,8C,8D,8E,8F,90,91,92,93,94,95,96,97,98,99,9A,9B,9C,9D,9E,9F,A0,0126,02D8,A3,A4,F7F5,0124,A7,A8,0130,015E,011E,0134,AD,F7F6,017B,B0,0127,B2,B3,B4,B5,0125,B7,B8,0131,015F,011F,0135,BD,F7F7,017C,";
            Map3 = "C0,C1,C2,F7F8,C4,010A,0108,C7,C8,C9,CA,CB,CC,CD,CE,CF,F7F9,D1,D2,D3,D4,0120,D6,D7,011C,D9,DA,DB,DC,016C,015C,DF,E0,E1,E2,F7FA,E4,010B,0109,E7,E8,E9,EA,EB,EC,ED,EE,EF,F7FB,F1,F2,F3,F4,0121,F6,F7,011D,F9,FA,FB,FC,016D,015D,02D9,";
            break;
        case 28594:
            EncodingName = "iso-8859-4";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "80,81,82,83,84,85,86,87,88,89,8A,8B,8C,8D,8E,8F,90,91,92,93,94,95,96,97,98,99,9A,9B,9C,9D,9E,9F,A0,0104,0138,0156,A4,0128,013B,A7,A8,0160,0112,0122,0166,AD,017D,AF,B0,0105,02DB,0157,B4,0129,013C,02C7,B8,0161,0113,0123,0167,014A,017E,014B,";
            Map3 = "0100,C1,C2,C3,C4,C5,C6,012E,010C,C9,0118,CB,0116,CD,CE,012A,0110,0145,014C,0136,D4,D5,D6,D7,D8,0172,DA,DB,DC,0168,016A,DF,0101,E1,E2,E3,E4,E5,E6,012F,010D,E9,0119,EB,0117,ED,EE,012B,0111,0146,014D,0137,F4,F5,F6,F7,F8,0173,FA,FB,FC,0169,016B,02D9,";
            break;
        case 28595:
            EncodingName = "iso-8859-5";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "80,81,82,83,84,85,86,87,88,89,8A,8B,8C,8D,8E,8F,90,91,92,93,94,95,96,97,98,99,9A,9B,9C,9D,9E,9F,A0,0401,0402,0403,0404,0405,0406,0407,0408,0409,040A,040B,040C,AD,040E,040F,0410,0411,0412,0413,0414,0415,0416,0417,0418,0419,041A,041B,041C,041D,041E,041F,";
            Map3 = "0420,0421,0422,0423,0424,0425,0426,0427,0428,0429,042A,042B,042C,042D,042E,042F,0430,0431,0432,0433,0434,0435,0436,0437,0438,0439,043A,043B,043C,043D,043E,043F,0440,0441,0442,0443,0444,0445,0446,0447,0448,0449,044A,044B,044C,044D,044E,044F,2116,0451,0452,0453,0454,0455,0456,0457,0458,0459,045A,045B,045C,A7,045E,045F,";
            break;
        case 28596:
            EncodingName = "iso-8859-6";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "80,81,82,83,84,85,86,87,88,89,8A,8B,8C,8D,8E,8F,90,91,92,93,94,95,96,97,98,99,9A,9B,9C,9D,9E,9F,A0,F7C8,F7C9,F7CA,A4,F7CB,F7CC,F7CD,F7CE,F7CF,F7D0,F7D1,060C,AD,F7D2,F7D3,F7D4,F7D5,F7D6,F7D7,F7D8,F7D9,F7DA,F7DB,F7DC,F7DD,F7DE,061B,F7DF,F7E0,F7E1,061F,";
            Map3 = "F7E2,0621,0622,0623,0624,0625,0626,0627,0628,0629,062A,062B,062C,062D,062E,062F,0630,0631,0632,0633,0634,0635,0636,0637,0638,0639,063A,F7E3,F7E4,F7E5,F7E6,F7E7,0640,0641,0642,0643,0644,0645,0646,0647,0648,0649,064A,064B,064C,064D,064E,064F,0650,0651,0652,F7E8,F7E9,F7EA,F7EB,F7EC,F7ED,F7EE,F7EF,F7F0,F7F1,F7F2,F7F3,F7F4,";
            break;
        case 28597:
            EncodingName = "iso-8859-7";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "80,81,82,83,84,85,86,87,88,89,8A,8B,8C,8D,8E,8F,90,91,92,93,94,95,96,97,98,99,9A,9B,9C,9D,9E,9F,A0,02BD,02BC,A3,F7C2,F7C3,A6,A7,A8,A9,F7C4,AB,AC,AD,F7C5,2015,B0,B1,B2,B3,0384,0385,0386,B7,0388,0389,038A,BB,038C,BD,038E,038F,";
            Map3 = "0390,0391,0392,0393,0394,0395,0396,0397,0398,0399,039A,039B,039C,039D,039E,039F,03A0,03A1,F7C6,03A3,03A4,03A5,03A6,03A7,03A8,03A9,03AA,03AB,03AC,03AD,03AE,03AF,03B0,03B1,03B2,03B3,03B4,03B5,03B6,03B7,03B8,03B9,03BA,03BB,03BC,03BD,03BE,03BF,03C0,03C1,03C2,03C3,03C4,03C5,03C6,03C7,03C8,03C9,03CA,03CB,03CC,03CD,03CE,F7C7,";
            break;
        case 28598:
            EncodingName = "iso-8859-8";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "80,81,82,83,84,85,86,87,88,89,8A,8B,8C,8D,8E,8F,90,91,92,93,94,95,96,97,98,99,9A,9B,9C,9D,9E,9F,A0,F79C,A2,A3,A4,A5,A6,A7,A8,A9,D7,AB,AC,AD,AE,203E,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,F7,BB,BC,BD,BE,F79D,";
            Map3 = "F79E,F79F,F7A0,F7A1,F7A2,F7A3,F7A4,F7A5,F7A6,F7A7,F7A8,F7A9,F7AA,F7AB,F7AC,F7AD,F7AE,F7AF,F7B0,F7B1,F7B2,F7B3,F7B4,F7B5,F7B6,F7B7,F7B8,F7B9,F7BA,F7BB,F7BC,2017,05D0,05D1,05D2,05D3,05D4,05D5,05D6,05D7,05D8,05D9,05DA,05DB,05DC,05DD,05DE,05DF,05E0,05E1,05E2,05E3,05E4,05E5,05E6,05E7,05E8,05E9,05EA,F7BD,F7BE,F7BF,F7C0,F7C1,";
            break;
        case 28599:
            EncodingName = "iso-8859-9";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "80,81,82,83,84,85,86,87,88,89,8A,8B,8C,8D,8E,8F,90,91,92,93,94,95,96,97,98,99,9A,9B,9C,9D,9E,9F,A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,AA,AB,AC,AD,AE,AF,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,BA,BB,BC,BD,BE,BF,";
            Map3 = "C0,C1,C2,C3,C4,C5,C6,C7,C8,C9,CA,CB,CC,CD,CE,CF,011E,D1,D2,D3,D4,D5,D6,D7,D8,D9,DA,DB,DC,0130,015E,DF,E0,E1,E2,E3,E4,E5,E6,E7,E8,E9,EA,EB,EC,ED,EE,EF,011F,F1,F2,F3,F4,F5,F6,F7,F8,F9,FA,FB,FC,0131,015F,FF,";
            break;
        case 28603:
            EncodingName = "iso-8859-13";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "80,81,82,83,84,85,86,87,88,89,8A,8B,8C,8D,8E,8F,90,91,92,93,94,95,96,97,98,99,9A,9B,9C,9D,9E,9F,A0,201D,A2,A3,A4,201E,A6,A7,D8,A9,0156,AB,AC,AD,AE,C6,B0,B1,B2,B3,201C,B5,B6,B7,F8,B9,0157,BB,BC,BD,BE,E6,";
            Map3 = "0104,012E,0100,0106,C4,C5,0118,0112,010C,C9,0179,0116,0122,0136,012A,013B,0160,0143,0145,D3,014C,D5,D6,D7,0172,0141,015A,016A,DC,017B,017D,DF,0105,012F,0101,0107,E4,E5,0119,0113,010D,E9,017A,0117,0123,0137,012B,013C,0161,0144,0146,F3,014D,F5,F6,F7,0173,0142,015B,016B,FC,017C,017E,2019,";
            break;
        case 28605:
            EncodingName = "iso-8859-15";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "80,81,82,83,84,85,86,87,88,89,8A,8B,8C,8D,8E,8F,90,91,92,93,94,95,96,97,98,99,9A,9B,9C,9D,9E,9F,A0,A1,A2,A3,20AC,A5,0160,A7,0161,A9,AA,AB,AC,AD,AE,AF,B0,B1,B2,B3,017D,B5,B6,B7,017E,B9,BA,BB,0152,0153,0178,BF,";
            Map3 = "C0,C1,C2,C3,C4,C5,C6,C7,C8,C9,CA,CB,CC,CD,CE,CF,D0,D1,D2,D3,D4,D5,D6,D7,D8,D9,DA,DB,DC,DD,DE,DF,E0,E1,E2,E3,E4,E5,E6,E7,E8,E9,EA,EB,EC,ED,EE,EF,F0,F1,F2,F3,F4,F5,F6,F7,F8,F9,FA,FB,FC,FD,FE,FF,";
            break;
        case 29001:
            EncodingName = "x-Europa";
            Map0 = "00,0386,0388,0389,038A,038C,038E,B0,25D8,25CB,25D9,2642,2640,266A,266C,263C,25B6,25C0,2195,203C,B6,A7,A3,038F,2191,2193,2192,2190,CB,2194,25B2,25BC,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "C7,FC,E9,E2,E4,E0,E5,E7,EA,EB,E8,EF,EE,EC,C4,C5,C9,E6,C6,F4,F6,F2,FB,F9,0391,D6,DC,F8,03B1,D8,03AC,0392,E1,ED,F3,FA,F1,D1,03B2,0393,03B3,0394,03B4,0395,03B5,03AD,0396,03B6,0397,03B7,03AE,2502,AA,C1,C2,C0,0398,03B8,2551,2557,255D,0399,03AA,2510,";
            Map3 = "2514,BA,A1,BF,2500,0384,E3,C3,255A,2554,03B9,03AF,03CA,2550,0390,039A,03BA,039B,CA,03BB,039C,03BC,CD,039D,03BD,2518,250C,039E,03BE,039F,03BF,03CC,D3,DF,D4,03A0,F5,D5,03C0,03A1,03C1,DA,03A3,03C2,03C3,03A4,03C4,03A5,03AB,03C5,03CD,03CB,03B0,03A6,03C6,03A7,03C7,03A8,0387,03C8,03A9,03C9,03CE,F8FF,";
            break;
        case 38598:
            EncodingName = "iso-8859-8-i";
            Map0 = "00,01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20,21,22,23,24,25,26,27,28,29,2A,2B,2C,2D,2E,2F,30,31,32,33,34,35,36,37,38,39,3A,3B,3C,3D,3E,3F,";
            Map1 = "40,41,42,43,44,45,46,47,48,49,4A,4B,4C,4D,4E,4F,50,51,52,53,54,55,56,57,58,59,5A,5B,5C,5D,5E,5F,60,61,62,63,64,65,66,67,68,69,6A,6B,6C,6D,6E,6F,70,71,72,73,74,75,76,77,78,79,7A,7B,7C,7D,7E,7F,";
            Map2 = "80,81,82,83,84,85,86,87,88,89,8A,8B,8C,8D,8E,8F,90,91,92,93,94,95,96,97,98,99,9A,9B,9C,9D,9E,9F,A0,F79C,A2,A3,A4,A5,A6,A7,A8,A9,D7,AB,AC,AD,AE,203E,B0,B1,B2,B3,B4,B5,B6,B7,B8,B9,F7,BB,BC,BD,BE,F79D,";
            Map3 = "F79E,F79F,F7A0,F7A1,F7A2,F7A3,F7A4,F7A5,F7A6,F7A7,F7A8,F7A9,F7AA,F7AB,F7AC,F7AD,F7AE,F7AF,F7B0,F7B1,F7B2,F7B3,F7B4,F7B5,F7B6,F7B7,F7B8,F7B9,F7BA,F7BB,F7BC,2017,05D0,05D1,05D2,05D3,05D4,05D5,05D6,05D7,05D8,05D9,05DA,05DB,05DC,05DD,05DE,05DF,05E0,05E1,05E2,05E3,05E4,05E5,05E6,05E7,05E8,05E9,05EA,F7BD,F7BE,F7BF,F7C0,F7C1,";
            break;

        case UTF16LE:
            BOMPrepare(2, 0xFF, 0xFE, 0, 0);
            Unicode = true;
            EncodingName = "UTF-16LE";
            break;
        case UTF16BE:
            BOMPrepare(2, 0xFE, 0xFF, 0, 0);
            Unicode = true;
            EncodingName = "UTF-16BE";
            break;
        case UTF32LE:
            BOMPrepare(4, 0xFF, 0xFE, 0x00, 0x00);
            Unicode = true;
            EncodingName = "UTF-32LE";
            break;
        case UTF32BE:
            BOMPrepare(2, 0x00, 0x00, 0xFE, 0xFF);
            Unicode = true;
            EncodingName = "UTF-32BE";
            break;
        case UTF8:
            BOMPrepare(3, 0xEF, 0xBB, 0xBF, 0x00);
            Unicode = true;
            EncodingName = "UTF-8";
            break;
        case BASE64:
            EncodingName = "Base64";
            EncodingNumber = BASE64;
            break;
        case HEX:
            EncodingName = "Hex";
            EncodingNumber = HEX;
            break;
        case NONE:
            EncodingName = "None";
            EncodingNumber = NONE;
            EncodingOneByte = true;
            break;
        default:
            EncodingName = "";
            EncodingNumber = -1;
            return;
    }

    if (Map0.size() > 0)
    {
        for (int I = 0; I < 256; I++)
        {
            MapByteToText[I] = 0;
        }

        int Pos0 = 0;
        int Pos1 = 0;
        int Pos2 = 0;
        int Pos3 = 0;
        for (int I = 0; I < 64; I++)
        {
            int Pos0_ = Pos0;
            int Pos1_ = Pos1;
            int Pos2_ = Pos2;
            int Pos3_ = Pos3;
            while (Map0[Pos0] != ',') { Pos0++; }
            while (Map1[Pos1] != ',') { Pos1++; }
            while (Map2[Pos2] != ',') { Pos2++; }
            while (Map3[Pos3] != ',') { Pos3++; }
            MapByteToText[I +   0] = Hex::HexToInt(Map0.substr(Pos0_, Pos0 - Pos0_));
            MapByteToText[I +  64] = Hex::HexToInt(Map1.substr(Pos1_, Pos1 - Pos1_));
            MapByteToText[I + 128] = Hex::HexToInt(Map2.substr(Pos2_, Pos2 - Pos2_));
            MapByteToText[I + 192] = Hex::HexToInt(Map3.substr(Pos3_, Pos3 - Pos3_));
            Pos0++;
            Pos1++;
            Pos2++;
            Pos3++;
        }
        EncodingOneByte = true;
    }
    else
    {
        for (int I = 0; I < 256; I++)
        {
            MapByteToText[I] = I;
        }
    }

    for (int I = 0; I < 256; I++)
    {
        MapTextToByte[MapByteToText[I]] = I;
    }

    Reset();
}

void TextCodec::BOMPrepare(unsigned int N, unsigned int B1, unsigned int B2, unsigned int B3, unsigned int B4)
{
    BOM__[0] = N;
    BOM__[1] = B1;
    BOM__[2] = B2;
    BOM__[3] = B3;
    BOM__[4] = B4;
}

void TextCodec::Reset()
{
    RawData.Clear();
    DequeueTextState = 0;
    Temp[0] = 0;
    Temp[1] = 0;
    Temp[2] = 0;
    Temp[3] = 0;
    Temp[4] = 0;
    Temp[5] = 0;
    Temp[6] = 0;
    Temp[7] = 0;
    Temp[8] = 0;
    Temp[9] = 0;
}

void TextCodec::AddBOM()
{
    for (int I = 1; I <= BOM__[0]; I++)
    {
        RawData.Add(BOM__[I]);
    }
}

void TextCodec::RemoveBOM()
{
    if ((BOM__[0] > 0) && (RawData.Count >= BOM__[0]))
    {
        bool IsBOM = true;
        for (int I = 1; I <= BOM__[0]; I++)
        {
            if (RawData[I - 1] != BOM__[I])
            {
                IsBOM = false;
            }
        }
        if (IsBOM)
        {
            RawData.RemoveRange(0, BOM__[0]);
        }
    }
}

void TextCodec::EnqueueRaw(Raw &Data)
{
    RawData.AddRange(Data);
}

void TextCodec::DequeueRaw(Raw &Data)
{
    Data.AddRange(RawData);
    RawData.Clear();
    DequeueTextState = 0;
}

void TextCodec::EnqueueStr(Str &Text)
{
    switch (EncodingNumber)
    {
        case UTF16LE:
        case UTF16BE:
            for (int I = 0; I < Text.Count; I++)
            {
                int Char = Text[I];
                if (((Char >= 0x0000) && (Char <= 0xD7FF)) || ((Char >= 0xE000) && (Char <= 0xFFFF)))
                {
                    Temp[0] = (Char) & 255;
                    Temp[1] = (Char >> 8) & 255;
                    if (EncodingNumber == UTF16LE)
                    {
                        RawData.Add(Temp[0]);
                        RawData.Add(Temp[1]);
                    }
                    if (EncodingNumber == UTF16BE)
                    {
                        RawData.Add(Temp[1]);
                        RawData.Add(Temp[0]);
                    }
                }
                if ((Char >= 0x10000) && (Char <= 0x10FFFF))
                {
                    Temp[0] = Char - 0x10000;
                    Temp[5] = ((Temp[0] >> 10) & 1023) + 0xD800;
                    Temp[6] = ((Temp[0]) & 1023) + 0xDC00;

                    Temp[1] = (Temp[5]) & 255;
                    Temp[2] = (Temp[5] >> 8) & 255;
                    Temp[3] = (Temp[6]) & 255;
                    Temp[4] = (Temp[6] >> 8) & 255;

                    if (EncodingNumber == UTF16LE)
                    {
                        RawData.Add(Temp[1]);
                        RawData.Add(Temp[2]);
                        RawData.Add(Temp[3]);
                        RawData.Add(Temp[4]);
                    }
                    if (EncodingNumber == UTF16BE)
                    {
                        RawData.Add(Temp[2]);
                        RawData.Add(Temp[1]);
                        RawData.Add(Temp[4]);
                        RawData.Add(Temp[3]);
                    }
                }
            }
            break;
        case UTF32LE:
        case UTF32BE:
            for (int I = 0; I < Text.Count; I++)
            {
                int Char = Text[I];
                Temp[0] = (Char) & 255;
                Temp[1] = (Char >> 8) & 255;
                Temp[2] = (Char >> 16) & 255;
                Temp[3] = (Char >> 24) & 255;
                if (EncodingNumber == UTF32LE)
                {
                    RawData.Add(Temp[0]);
                    RawData.Add(Temp[1]);
                    RawData.Add(Temp[2]);
                    RawData.Add(Temp[3]);
                }
                if (EncodingNumber == UTF32BE)
                {
                    RawData.Add(Temp[3]);
                    RawData.Add(Temp[2]);
                    RawData.Add(Temp[1]);
                    RawData.Add(Temp[0]);
                }
            }
            break;
        case UTF8:
            for (int I = 0; I < Text.Count; I++)
            {
                int Char = Text[I];
                if ((Char >= 0x00) && (Char <= 0x7F))
                {
                    RawData.Add(((Char) & 127));
                }
                if ((Char >= 0x80) && (Char <= 0x7FF))
                {
                    RawData.Add(((Char >> 6) & 31) + 0xC0);
                    RawData.Add(((Char) & 63) + 0x80);
                }
                if ((Char >= 0x800) && (Char <= 0xFFFF))
                {
                    RawData.Add(((Char >> 12) & 15) + 0xE0);
                    RawData.Add(((Char >> 6) & 63) + 0x80);
                    RawData.Add(((Char) & 63) + 0x80);
                }
                if ((Char >= 0x10000) && (Char <= 0x1FFFFF))
                {
                    RawData.Add(((Char >> 18) & 7) + 0xF0);
                    RawData.Add(((Char >> 12) & 63) + 0x80);
                    RawData.Add(((Char >> 6) & 63) + 0x80);
                    RawData.Add(((Char) & 63) + 0x80);
                }
                if ((Char >= 0x200000) && (Char <= 0x3FFFFFF))
                {
                    RawData.Add(((Char >> 24) & 3) + 0xF8);
                    RawData.Add(((Char >> 18) & 63) + 0x80);
                    RawData.Add(((Char >> 12) & 63) + 0x80);
                    RawData.Add(((Char >> 6) & 63) + 0x80);
                    RawData.Add(((Char) & 63) + 0x80);
                }
                if ((Char >= 0x4000000) && (Char <= 0x7FFFFFFF))
                {
                    RawData.Add(((Char >> 30) & 1) + 0xFC);
                    RawData.Add(((Char >> 24) & 63) + 0x80);
                    RawData.Add(((Char >> 18) & 63) + 0x80);
                    RawData.Add(((Char >> 12) & 63) + 0x80);
                    RawData.Add(((Char >> 6) & 63) + 0x80);
                    RawData.Add(((Char) & 63) + 0x80);
                }
            }
            break;
        case BASE64:
            for (int I = 0; I < Text.Count; I += 4)
            {
                int Byte0 = -1;
                int Byte1 = -1;
                int Byte2 = -1;
                int Byte3 = -1;
                for (int II = 0; II < 64; II++)
                {
                    if (Base64Chars[II] == Text[I + 0]) { Byte0 = II; }
                    if (Base64Chars[II] == Text[I + 1]) { Byte1 = II; }
                    if (Base64Chars[II] == Text[I + 2]) { Byte2 = II; }
                    if (Base64Chars[II] == Text[I + 3]) { Byte3 = II; }
                }

                if ((Byte0 >= 0) && (Byte1 >= 0))
                {
                    RawData.Add(((Byte0 << 2) + (Byte1 >> 4)) & 255);
                }
                if ((Byte1 >= 0) && (Byte2 >= 0))
                {
                    RawData.Add(((Byte1 << 4) + (Byte2 >> 2)) & 255);
                }
                if ((Byte2 >= 0) && (Byte3 >= 0))
                {
                    RawData.Add(((Byte2 << 6) + (Byte3)) & 255);
                }
            }
            break;
        case HEX:
            for (int I = 0; I < Text.Count; I += 2)
            {
                if (Text[I] == '_')
                {
                    RawData.Add(Text[I + 1]);
                }
                else
                {
                    int Num1 = 0;
                    int Num2 = 0;
                    for (int II = 0; II < 32; II++)
                    {
                        if (Text[I] == HexChars[II])
                        {
                            Num1 = (II & 15) << 4;
                        }
                        if (Text[I + 1] == HexChars[II])
                        {
                            Num2 = II & 15;
                        }
                    }
                    RawData.Add(Num1 + Num2);
                }
            }
            break;
        default:
            for (int I = 0; I < Text.Count; I++)
            {
                if (MapTextToByte.find(Text[I]) != MapTextToByte.end())
                {
                    RawData.Add(MapTextToByte[Text[I]]);
                }
                else
                {
                    RawData.Add('?');
                }
            }
            return;
    }
}

void TextCodec::DequeueStr(Str &Text)
{
    switch (EncodingNumber)
    {
        case UTF16LE:
        case UTF16BE:
            for (int I = 0; I < RawData.Count; I++)
            {
                Temp[DequeueTextState] = RawData[I];
                switch (DequeueTextState)
                {
                    case 0:
                    case 2:
                        DequeueTextState++;
                        break;
                    case 1:
                        if (EncodingNumber == UTF16LE)
                        {
                            Temp[0] = (Temp[1] << 8) + Temp[0];
                        }
                        if (EncodingNumber == UTF16BE)
                        {
                            Temp[0] = (Temp[0] << 8) + Temp[1];
                        }
                        if ((Temp[0] <= 0xD7FF) || (Temp[0] >= 0xE000))
                        {
                            Text.Add(Temp[0]);
                            DequeueTextState = 0;
                        }
                        else
                        {
                            DequeueTextState = 2;
                        }
                        break;
                    case 3:
                        if (EncodingNumber == UTF16LE)
                        {
                            Temp[2] = (Temp[3] << 8) + Temp[2];
                        }
                        if (EncodingNumber == UTF16BE)
                        {
                            Temp[2] = (Temp[2] << 8) + Temp[3];
                        }
                        if ((Temp[0] >= 0xD800) && (Temp[0] <= 0xDBFF) && (Temp[2] >= 0xDC00) && (Temp[2] <= 0xDFFF))
                        {
                            Text.Add((((Temp[0] & 1023) + 64) << 10) + (Temp[2] & 1023));
                        }
                        DequeueTextState = 0;
                        break;
                }
            }
            break;
        case UTF32LE:
        case UTF32BE:
            {
                for (int I = 0; I < RawData.Count; I++)
                {
                    Temp[DequeueTextState] = RawData[I];
                    switch (DequeueTextState)
                    {
                        case 0:
                        case 1:
                        case 2:
                            DequeueTextState++;
                            break;
                        case 3:
                            if (EncodingNumber == UTF32LE)
                            {
                                Temp[3] = Temp[3] << 24;
                                Temp[2] = Temp[2] << 16;
                                Temp[1] = Temp[1] << 8;
                            }
                            if (EncodingNumber == UTF32BE)
                            {
                                Temp[0] = Temp[0] << 24;
                                Temp[1] = Temp[1] << 16;
                                Temp[2] = Temp[2] << 8;
                            }
                            Text.Add(Temp[0] + Temp[1] + Temp[2] + Temp[3]);
                            DequeueTextState = 0;
                            break;
                    }
                }
            }
            break;
        case UTF8:
            {
                for (int I = 0; I < RawData.Count; I++)
                {
                    int RawDataNum = RawData[I];
                    switch (DequeueTextState)
                    {
                        case 0:
                            if (RawDataNum < 128)
                            {
                                Text.Add(RawDataNum);
                            }
                            else
                            {
                                // 110_____
                                if ((RawDataNum >= 0xC0) && (RawDataNum <= 0xDF))
                                {
                                    DequeueTextState = 1;
                                    Temp[1] = RawDataNum & 0x1F;
                                }

                                // 1110____
                                if ((RawDataNum >= 0xE0) && (RawDataNum <= 0xEF))
                                {
                                    DequeueTextState = 2;
                                    Temp[2] = RawDataNum & 0x0F;
                                }

                                // 11110___
                                if ((RawDataNum >= 0xF0) && (RawDataNum <= 0xF7))
                                {
                                    DequeueTextState = 3;
                                    Temp[3] = RawDataNum & 0x07;
                                }

                                // 111110__
                                if ((RawDataNum >= 0xF8) && (RawDataNum <= 0xFB))
                                {
                                    DequeueTextState = 4;
                                    Temp[4] = RawDataNum & 0x03;
                                }

                                // 1111110_
                                if ((RawDataNum >= 0xFC) && (RawDataNum <= 0xFD))
                                {
                                    DequeueTextState = 5;
                                    Temp[5] = RawDataNum & 0x01;
                                }
                            }
                            break;
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            if ((RawDataNum >= 0x80) && (RawDataNum <= 0xBF))
                            {
                                Temp[5] = Temp[5] << 6;
                                Temp[4] = Temp[4] << 6;
                                Temp[3] = Temp[3] << 6;
                                Temp[2] = Temp[2] << 6;
                                Temp[1] = Temp[1] << 6;
                                Temp[0] = Temp[0] << 6;

                                DequeueTextState--;
                                Temp[DequeueTextState] = (RawDataNum & 0x3F);
                                if (DequeueTextState == 0)
                                {
                                    Text.Add(Temp[5] + Temp[4] + Temp[3] + Temp[2] + Temp[1] + Temp[0]);

                                    Temp[0] = 0;
                                    Temp[1] = 0;
                                    Temp[2] = 0;
                                    Temp[3] = 0;
                                    Temp[4] = 0;
                                    Temp[5] = 0;
                                }
                            }
                            else
                            {
                                DequeueTextState = 0;
                                Temp[0] = 0;
                                Temp[1] = 0;
                                Temp[2] = 0;
                                Temp[3] = 0;
                                Temp[4] = 0;
                                Temp[5] = 0;
                                I--;
                            }
                            break;
                    }
                }
            }
            break;
        case BASE64:
            for (int I = 0; I < RawData.Count; I += 3)
            {
                int Char0 = -1;
                int Char1 = -1;
                int Char2 = -1;
                if ((I + 0) < RawData.Count) Char0 = RawData[I + 0];
                if ((I + 1) < RawData.Count) Char1 = RawData[I + 1];
                if ((I + 2) < RawData.Count) Char2 = RawData[I + 2];
                int Byte0 = 64;
                int Byte1 = 64;
                int Byte2 = 64;
                int Byte3 = 64;
                if (Char0 >= 0)
                {
                    Byte0 = ((Char0 >> 2) & 63);
                    Byte1 = ((Char0 << 4) & 63);
                }
                if (Char1 >= 0)
                {
                    Byte1 = Byte1 + ((Char1 >> 4) & 63);
                    Byte2 = ((Char1 << 2) & 63);
                }
                if (Char2 >= 0)
                {
                    Byte2 = Byte2 + ((Char2 >> 6) & 63);
                    Byte3 = ((Char2) & 63);
                }

                Text.Add(Base64Chars[Byte0]);
                Text.Add(Base64Chars[Byte1]);
                Text.Add(Base64Chars[Byte2]);
                Text.Add(Base64Chars[Byte3]);
            }
            break;
        case HEX:
            for (int I = 0; I < RawData.Count; I++)
            {
                if ((RawData[I] >= 32) && (RawData[I] <= 126))
                {
                    Text.Add('_');
                    Text.Add(RawData[I]);
                }
                else
                {
                    Text.Add(HexChars[RawData[I] >> 4]);
                    Text.Add(HexChars[RawData[I] & 15]);
                }
            }
            break;
        default:
            for (int I = 0; I < RawData.Count; I++)
            {
                Text.Add(MapByteToText[RawData[I]]);
            }
            break;
    }
    RawData.Clear();
}

void TextCodec::Encode(Str &Text, Raw &Data)
{
    EnqueueStr(Text);
    DequeueRaw(Data);
}

void TextCodec::Decode(Raw &Data, Str &Text)
{
    EnqueueRaw(Data);
    DequeueStr(Text);
}

std::string TextCodec::FullName()
{
    return std::to_string(EncodingNumber) + "/" + EncodingName;
}

void TextCodec::Transcode(Str &S, int CodecSrc, int CodecDst)
{
    TextCodec Codec1(CodecSrc);
    TextCodec Codec2(CodecDst);

    Codec1.EnqueueStr(S);
    Raw Temp;
    Codec1.DequeueRaw(Temp);

    Codec2.EnqueueRaw(Temp);
    S.Clear();
    Codec2.DequeueStr(S);
}

void TextCodec::Transcode(Raw &S, int CodecSrc, int CodecDst)
{
    TextCodec Codec1(CodecSrc);
    TextCodec Codec2(CodecDst);

    Codec2.EnqueueRaw(S);
    Str Temp;
    Codec2.DequeueStr(Temp);

    Codec1.EnqueueStr(Temp);
    S.Clear();
    Codec1.DequeueRaw(S);
}

Str TextCodec::Code(Raw &S, int Codec)
{
    TextCodec Codec0(Codec);
    Codec0.EnqueueRaw(S);
    Str Temp;
    Codec0.DequeueStr(Temp);
    return Temp;
}

Raw TextCodec::Code(Str &S, int Codec)
{
    TextCodec Codec0(Codec);
    Codec0.EnqueueStr(S);
    Raw Temp;
    Codec0.DequeueRaw(Temp);
    return Temp;
}

void TextCodec::CodecListCreateItem(int Num)
{
    TextCodec E(Num);
    if (E.EncodingNumber >= 0)
    {
        CodecListName.Add(E.EncodingName);
        CodecListNumber.Add(E.EncodingNumber);
    }
}

void TextCodec::CodecListCreate()
{
    CodecListNumber.Clear();
    CodecListName.Clear();
    CodecListCreateItem(0);
    CodecListCreateItem(1);
    CodecListCreateItem(37);
    for (int I = 437; I <= 1260; I++)
    {
        CodecListCreateItem(I);
    }
    for (int I = 10000; I <= 12005; I++)
    {
        CodecListCreateItem(I);
    }
    for (int I = 20105; I <= 21866; I++)
    {
        CodecListCreateItem(I);
    }
    for (int I = 28590; I <= 28605; I++)
    {
        CodecListCreateItem(I);
    }
    CodecListCreateItem(29001);
    CodecListCreateItem(38598);
    CodecListCreateItem(65001);
}
